import { Config, Interfaces } from '@oclif/core';
import { AsyncCreatable } from '@salesforce/kit';
import { JsonMap, Optional } from '@salesforce/ts-types';
export declare type CommandExecutionOptions = {
    command: Partial<Interfaces.Command.Class>;
    argv: string[];
    config: Partial<Config>;
};
interface PluginInfo {
    name: Optional<string>;
    version: Optional<string>;
}
export declare class CommandExecution extends AsyncCreatable {
    status?: number;
    private start;
    private upTimeAtCmdStart;
    private specifiedFlags;
    private specifiedFlagFullNames;
    private command;
    private argv;
    private config;
    private vcs?;
    private orgUsername?;
    private devHubOrgUsername?;
    constructor(options: CommandExecutionOptions);
    /**
     * Determines whether the SFDX project is using GIT for version control or some other VCS.
     * Returns a token indicating the VCS for usage stats, or an empty string if the command
     * was executed outside of an SFDX project.
     */
    static resolveVCSInfo(): Promise<string>;
    toJson(): JsonMap;
    getPluginInfo(): PluginInfo;
    getCommandName(): string;
    protected init(): Promise<void>;
    private determineSpecifiedFlags;
}
export {};
