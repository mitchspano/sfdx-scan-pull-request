"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const command_base_1 = require("../../command-base");
class Generate extends command_base_1.default {
    constructor() {
        super(...arguments);
        this.type = 'sfdx-plugin';
    }
    async run() {
        const { flags: flagsGenerate, args } = await this.parse(Generate);
        await super.generate('app', {
            type: this.type,
            path: args.path,
            defaults: flagsGenerate.defaults,
            force: flagsGenerate.force,
        });
    }
}
exports.default = Generate;
Generate.flags = {
    defaults: core_1.Flags.boolean({ description: 'use defaults for every setting' }),
    force: core_1.Flags.boolean({ description: 'overwrite existing files' }),
};
Generate.args = [{ name: 'path', required: false }];
Generate.description = 'create a new sfdx-cli plugin';
//# sourceMappingURL=generate.js.map