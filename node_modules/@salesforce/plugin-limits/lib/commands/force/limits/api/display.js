"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LimitsApiDisplayCommand = void 0;
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const os = require("os");
const command_1 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-limits', 'display');
class LimitsApiDisplayCommand extends command_1.SfdxCommand {
    async run() {
        try {
            const conn = this.org.getConnection();
            const geturl = `${conn.instanceUrl}/services/data/v${conn.version}/limits`;
            const result = await conn.request(geturl);
            const limits = [];
            Object.keys(result).map((limitName) => {
                limits.push({
                    name: limitName,
                    max: result[limitName].Max,
                    remaining: result[limitName].Remaining,
                });
            });
            this.ux.table(limits, { name: { header: 'Name' }, remaining: { header: 'Remaining' }, max: { header: 'Max' } });
            return limits;
        }
        catch (err) {
            throw core_1.SfError.wrap(err);
        }
    }
}
exports.LimitsApiDisplayCommand = LimitsApiDisplayCommand;
LimitsApiDisplayCommand.description = messages.getMessage('description');
LimitsApiDisplayCommand.examples = messages.getMessage('examples').split(os.EOL);
LimitsApiDisplayCommand.requiresUsername = true;
//# sourceMappingURL=display.js.map