import { AsyncOptionalCreatable } from '@salesforce/kit';
import { AliasAccessor } from './accessors/aliasAccessor';
import { OrgAccessor } from './accessors/orgAccessor';
import { SandboxAccessor } from './accessors/sandboxAccessor';
import { TokenAccessor } from './accessors/tokenAccessor';
export declare class StateAggregator extends AsyncOptionalCreatable {
    private static instanceMap;
    aliases: AliasAccessor;
    orgs: OrgAccessor;
    sandboxes: SandboxAccessor;
    tokens: TokenAccessor;
    /**
     * Reuse a StateAggregator if one was already created for the current global state directory
     * Otherwise, create one and adds it to map for future reuse.
     * HomeDir might be stubbed in tests
     */
    static getInstance(): Promise<StateAggregator>;
    /**
     * Clear the cache to force reading from disk.
     *
     * *NOTE: Only call this method if you must and you know what you are doing.*
     */
    static clearInstance(path?: string): void;
    protected init(): Promise<void>;
}
