import { JsonMap } from '@salesforce/ts-types';
import { AuthFields } from '../org';
/**
 * @deprecated
 */
export declare enum SfInfoKeys {
    ORGS = "orgs",
    TOKENS = "tokens",
    ALIASES = "aliases",
    SANDBOXES = "sandboxes"
}
export declare type Timestamp = {
    timestamp: string;
};
export declare type SfEntry = JsonMap;
/**
 * @deprecated
 */
export declare type SfOrg = AuthFields & SfEntry;
/**
 * @deprecated
 */
export interface SfOrgs {
    [key: string]: SfOrg & Timestamp;
}
export declare type SfToken = {
    token: string;
    url: string;
    user?: string;
} & SfEntry;
/**
 */
export declare type SfTokens = {
    [key: string]: SfToken & Timestamp;
};
/**
 * The key will always be the alias and the value will always be the username, e.g.
 * { "MyAlias": "user@salesforce.com" }
 */
export declare type SfAliases = {
    [alias: string]: string;
};
/**
 * @deprecated
 */
export declare type SfSandbox = {
    sandboxOrgId: string;
    prodOrgUsername: string;
    sandboxName?: string;
    sandboxUsername?: string;
    sandboxProcessId?: string;
    sandboxInfoId?: string;
} & Timestamp & SfEntry;
/**
 * The key will always be the sandbox username and the value will always be the
 * production org username
 * { "user@salesforce.com.mysandbox": "user@salesforce.com" }
 *
 * @deprecated
 */
export interface SfSandboxes {
    [sandboxOrgId: string]: SfSandbox;
}
/**
 * @deprecated
 */
export declare type SfInfo = {
    [SfInfoKeys.ORGS]: SfOrgs;
    [SfInfoKeys.TOKENS]: SfTokens;
    [SfInfoKeys.ALIASES]: SfAliases;
    [SfInfoKeys.SANDBOXES]: SfSandboxes;
};
