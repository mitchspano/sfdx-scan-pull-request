import { AnyJson } from '@salesforce/ts-types';
import { ConfigFile } from '../config/configFile';
import { ConfigValue } from '../config/configStore';
import { GlobalInfoOrgAccessor } from './accessors/orgAccessor';
import { GlobaInfoTokenAccessor } from './accessors/tokenAccessor';
import { GlobalInfoAliasAccessor } from './accessors/aliasAccessor';
import { SfInfo } from './types';
import { GlobalInfoSandboxAccessor } from './accessors/sandboxAccessor';
export declare function deepCopy<T extends AnyJson>(data: T): T;
/**
 * @deprecated use StateAggregator instead.
 */
export declare class GlobalInfo extends ConfigFile<ConfigFile.Options, SfInfo> {
    protected static encryptedKeys: RegExp[];
    private static EMPTY_DATA_MODEL;
    private static instance;
    private sfdxHandler;
    static get emptyDataModel(): SfInfo;
    static getInstance(): Promise<GlobalInfo>;
    /**
     * Clear the cache to force reading from disk.
     *
     * *NOTE: Only call this method if you must and you know what you are doing.*
     */
    static clearInstance(): void;
    static getFileName(): string;
    /**
     * Gets default options for the SfConfig
     */
    static getDefaultOptions(): ConfigFile.Options;
    get orgs(): GlobalInfoOrgAccessor;
    get tokens(): GlobaInfoTokenAccessor;
    get aliases(): GlobalInfoAliasAccessor;
    get sandboxes(): GlobalInfoSandboxAccessor;
    set(key: string, value: ConfigValue): void;
    write(newContents?: SfInfo): Promise<SfInfo>;
    protected init(): Promise<void>;
    private timestamp;
    private loadSfData;
    private mergeWithSfdxData;
}
