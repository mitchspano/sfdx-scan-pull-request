"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.emitPostOrgCreate = exports.emit = exports.scratchOrgLifecycleStages = exports.scratchOrgLifecycleEventName = void 0;
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const lifecycleEvents_1 = require("../lifecycleEvents");
const emitter = lifecycleEvents_1.Lifecycle.getInstance();
exports.scratchOrgLifecycleEventName = 'scratchOrgLifecycleEvent';
exports.scratchOrgLifecycleStages = [
    'prepare request',
    'send request',
    'wait for org',
    'available',
    'authenticate',
    'deploy settings',
    'done',
];
const emit = async (event) => {
    emitter.emit(exports.scratchOrgLifecycleEventName, event);
};
exports.emit = emit;
const postOrgCreateHookFields = [
    'accessToken',
    'clientId',
    'created',
    'createdOrgInstance',
    'devHubUsername',
    'expirationDate',
    'instanceUrl',
    'loginUrl',
    'orgId',
    'username',
];
const isHookField = (key) => {
    return postOrgCreateHookFields.includes(key);
};
const emitPostOrgCreate = async (authFields) => {
    emitter.emit('postorgcreate', Object.fromEntries(Object.entries(authFields).filter(([key]) => isHookField(key))));
};
exports.emitPostOrgCreate = emitPostOrgCreate;
//# sourceMappingURL=scratchOrgLifecycleEvents.js.map