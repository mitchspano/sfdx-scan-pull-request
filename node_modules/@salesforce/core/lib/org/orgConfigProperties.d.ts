import { ConfigValue } from '../config/configStore';
export declare enum OrgConfigProperties {
    /**
     * Username associate with the default org.
     */
    TARGET_ORG = "target-org",
    /**
     * Username associated with the default dev hub org.
     */
    TARGET_DEV_HUB = "target-dev-hub",
    /**
     * The api version
     */
    ORG_API_VERSION = "org-api-version",
    /**
     * Custom templates repo or local location.
     */
    ORG_CUSTOM_METADATA_TEMPLATES = "org-custom-metadata-templates",
    /**
     * Allows users to override the 10,000 result query limit.
     */
    ORG_MAX_QUERY_LIMIT = "org-max-query-limit",
    /**
     * The instance url of the org.
     */
    ORG_INSTANCE_URL = "org-instance-url",
    /**
     * The sid for the debugger configuration.
     */
    ORG_ISV_DEBUGGER_SID = "org-isv-debugger-sid",
    /**
     * The url for the debugger configuration.
     */
    ORG_ISV_DEBUGGER_URL = "org-isv-debugger-url"
}
export declare const ORG_CONFIG_ALLOWED_PROPERTIES: ({
    key: OrgConfigProperties;
    description: string;
    input?: undefined;
    hidden?: undefined;
    encrypted?: undefined;
} | {
    key: OrgConfigProperties;
    description: string;
    input: {
        validator: (value: ConfigValue) => boolean;
        failedMessage: string;
    };
    hidden?: undefined;
    encrypted?: undefined;
} | {
    key: OrgConfigProperties;
    description: string;
    hidden: boolean;
    input: {
        validator: (value: ConfigValue) => boolean;
        failedMessage: string;
    };
    encrypted?: undefined;
} | {
    key: OrgConfigProperties;
    description: string;
    encrypted: boolean;
    input: {
        validator: (value: ConfigValue) => boolean;
        failedMessage: string;
    };
    hidden?: undefined;
})[];
