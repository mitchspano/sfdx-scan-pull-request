/**
 * The default metadata registry.
 */
export declare const registry: Readonly<{
    types: {
        serviceaisetupdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        serviceaisetupfield: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        aiapplication: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        aiapplicationconfig: {
            id: string;
            suffix: string;
            directoryName: string;
            name: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        aiusecasedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mlpredictiondefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mldatadefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        installedpackage: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customlabels: {
            id: string;
            name: string;
            ignoreParsedFullName: boolean;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    customlabel: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        ignoreParentName: boolean;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    labels: string;
                };
                directories: {
                    labels: string;
                };
            };
            strategies: {
                adapter: string;
                transformer: string;
                recomposition: string;
            };
        };
        navigationmenu: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        staticresource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
                transformer: string;
            };
        };
        scontrol: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        experiencebundle: {
            id: string;
            name: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        certificate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        lightningmessagechannel: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        auradefinitionbundle: {
            id: string;
            name: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        lightningcomponentbundle: {
            id: string;
            name: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        apexcomponent: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        apexpage: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        queue: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customdatatype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        casesubjectparticle: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        externaldatasource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        namedcredential: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        externalserviceregistration: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        role: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        territory: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        group: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        uiplugin: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        globalvalueset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        globalpicklist: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        standardvalueset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        custompermission: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        permissionsetlicensedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customobject: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            supportsWildcardAndName: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    customfield: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    index: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                        legacySuffix: string;
                    };
                    businessprocess: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    recordtype: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    compactlayout: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    weblink: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    validationrule: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    sharingreason: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    listview: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                    fieldset: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    field: string;
                    index: string;
                    indexe: string;
                    businessProcess: string;
                    recordType: string;
                    compactLayout: string;
                    webLink: string;
                    validationRule: string;
                    sharingReason: string;
                    listView: string;
                    fieldSet: string;
                };
                directories: {
                    fields: string;
                    indexes: string;
                    businessProcesses: string;
                    recordTypes: string;
                    compactLayouts: string;
                    webLinks: string;
                    validationRules: string;
                    sharingReasons: string;
                    listViews: string;
                    fieldSets: string;
                };
            };
            strategies: {
                adapter: string;
                transformer: string;
                decomposition: string;
            };
        };
        reporttype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        report: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderType: string;
        };
        dashboard: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderType: string;
        };
        visualizationplugin: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        analyticsnapshot: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customfeedfilter: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        layout: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        document: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderType: string;
            strategies: {
                adapter: string;
            };
        };
        custompageweblink: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            legacySuffix: string;
        };
        letterhead: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        emailtemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderType: string;
            strategies: {
                adapter: string;
            };
        };
        quickaction: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        form: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            children: {
                types: {
                    formsection: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    formSection: string;
                };
                directories: {
                    formSections: string;
                };
            };
        };
        flexipage: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customtab: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customapplicationcomponent: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        customapplication: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        portal: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        embeddedserviceconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        embeddedserviceliveagent: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        embeddedservicefieldservice: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        embeddedservicebranding: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        recommendationstrategy: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        flow: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        flowdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        flowtest: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        eventtype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        eventsubscription: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        eventdelivery: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        workflow: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    workflowfieldupdate: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    workflowknowledgepublish: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    workflowtask: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    workflowalert: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    workflowsend: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    workflowoutboundmessage: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    workflowrule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    workflowFieldUpdate: string;
                    workflowKnowledgePublish: string;
                    workflowTask: string;
                    workflowAlert: string;
                    workflowSend: string;
                    workflowOutboundMessage: string;
                    workflowRule: string;
                };
                directories: {
                    workflowFieldUpdates: string;
                    workflowKnowledgePublishs: string;
                    workflowTasks: string;
                    workflowAlerts: string;
                    workflowSends: string;
                    workflowOutboundMessages: string;
                    workflowRules: string;
                };
            };
        };
        assignmentrules: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    assignmentrule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    assignmentRule: string;
                };
                directories: {
                    assignmentRules: string;
                };
            };
        };
        autoresponserules: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    autoresponserule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    autoResponseRule: string;
                };
                directories: {
                    autoResponseRules: string;
                };
            };
        };
        escalationrules: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    escalationrule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    escalationRule: string;
                };
                directories: {
                    escalationRules: string;
                };
            };
        };
        posttemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        approvalprocess: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        homepagecomponent: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        homepagelayout: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customobjecttranslation: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    customfieldtranslation: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                        isAddressable: boolean;
                        unaddressableWithoutParent: boolean;
                        uniqueIdElement: string;
                    };
                };
                suffixes: {
                    fieldTranslation: string;
                };
                directories: {
                    fields: string;
                };
            };
            strategies: {
                adapter: string;
                transformer: string;
                decomposition: string;
            };
        };
        translations: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        globalvaluesettranslation: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        standardvaluesettranslation: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        apexclass: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        apextrigger: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        apextestsuite: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        profile: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        permissionset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        permissionsetgroup: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        custommetadata: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        profilepasswordpolicy: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        profilesessionsetting: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        datacategorygroup: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        remotesitesetting: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        csptrustedsite: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        matchingrules: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    matchingrule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    matchingRule: string;
                };
                directories: {
                    matchingRules: string;
                };
            };
        };
        duplicaterule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        cleandataservice: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        servicechannel: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        queueroutingconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        servicepresencestatus: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        presencedeclinereason: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        presenceuserconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        authprovider: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        wavetemplatebundle: {
            id: string;
            name: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        waveapplication: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        wavedataset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        eclairgeodata: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        wavelens: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        wavedashboard: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        wavecomponent: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        wavexmd: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        wavedataflow: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        waverecipe: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        customsite: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        channellayout: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        contentasset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        marketingresourcetype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        sharingrules: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    sharingownerrule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    sharingcriteriarule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    sharingguestrule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                    sharingterritoryrule: {
                        id: string;
                        name: string;
                        xmlElementName: string;
                        uniqueIdElement: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    sharingOwnerRule: string;
                    sharingCriteriaRule: string;
                    sharingGuestRule: string;
                    sharingTerritoryRule: string;
                };
                directories: {
                    sharingOwnerRules: string;
                    sharingCriteriaRules: string;
                    sharingGuestRules: string;
                    sharingTerritoryRules: string;
                };
            };
        };
        sharingset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        community: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        chatterextension: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        callcenter: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        milestonetype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        entitlementprocess: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        entitlementtemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        customnotificationtype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        connectedapp: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        appmenu: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        delegategroup: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        sitedotcom: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        network: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        networkbranding: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        customexperience: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        communitythemedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        brandingset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        flowcategory: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        lightningbolt: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        lightningexperiencetheme: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        communitytemplatedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        managedtopics: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    managedtopic: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    managedTopic: string;
                };
                directories: {
                    managedTopics: string;
                };
            };
        };
        keywordlist: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        usercriteria: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        moderationrule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        territory2type: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        territory2model: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            folderType: string;
        };
        territory2rule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            folderType: string;
        };
        territory2: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            folderType: string;
        };
        campaigninfluencemodel: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        samlssoconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        datapipeline: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        corswhitelistorigin: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        actionlinkgrouptemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        licensedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        transactionsecuritypolicy: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        accesscontrolpolicy: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        skill: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        livechatdeployment: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        livechatbutton: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        livechatagentconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        synonymdictionary: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        xorghub: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        pathassistant: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        leadconvertsettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        livechatsensitivedatarule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        platformcachepartition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        assistantrecommendationtype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        insighttype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        topicsforobjects: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        emailservicesfunction: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        integrationhubsettingstype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        integrationhubsettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        orchestrationcontext: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        orchestration: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strategies: {
                adapter: string;
            };
        };
        aiassistanttemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        settings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        featureparameterboolean: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        featureparameterdate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        featureparameterinteger: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        commandaction: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        batchcalcjobdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        oauthcustomscope: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        platformeventchannel: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customhelpmenusection: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        prompt: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mldomain: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        bot: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    botversion: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                directories: {
                    botVersions: string;
                };
                suffixes: {
                    botVersion: string;
                };
            };
            strategies: {
                adapter: string;
                transformer: string;
                decomposition: string;
            };
        };
        bottemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        animationrule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        recordactiondeployment: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        embeddedserviceflowconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        platformeventchannelmember: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        canvasmetadata: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mobileapplicationdetail: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        lightningonboardingconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        reportfolder: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderContentType: string;
        };
        dashboardfolder: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderContentType: string;
        };
        documentfolder: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderContentType: string;
        };
        emailfolder: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderContentType: string;
        };
        emailtemplatefolder: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            folderContentType: string;
            aliasFor: string;
        };
        inboundnetworkconnection: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        outboundnetworkconnection: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        inboundcertificate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        mutingpermissionset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mydomaindiscoverablelogin: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        blacklistedconsumer: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        userprovisioningconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        redirectwhitelisturl: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        apexemailnotifications: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        iframewhitelisturlsettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        appointmentschedulingpolicy: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        notificationtypeconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        managedcontenttype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        paymentgatewayprovider: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        embeddedservicemenusettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        callcoachingmediaprovider: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        customindex: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        entityimplements: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        audience: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        cmsconnectsource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        platformeventsubscriberconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        userprofilesearchscope: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        workskillrouting: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
            children: {
                types: {
                    workskillroutingattribute: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    workSkillRoutingAttribute: string;
                };
                directories: {
                    workSkillRoutingAttributes: string;
                };
            };
        };
        timesheettemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        accountrelationshipsharerule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        ipaddressrange: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        icon: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        businessprocessgroup: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        businessprocessfeedbackconfiguration: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        discoveryaimodel: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        discoverygoal: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        restrictionrule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        functionreference: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        participantrole: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        gatewayproviderpaymentmethodtype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        careprovidersearchconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        caresystemfieldmapping: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        documenttype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        ocrsampledocument: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        ocrtemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        actionplantemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        decisiontable: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        decisiontabledatasetlink: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        decisionmatrixdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        decisionmatrixdefinitionversion: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        expressionsetdefinitionversion: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        expressionsetdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        briefcasedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        batchprocessjobdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        webstoretemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        dynamictrigger: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        objecthierarchyrelationship: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        salesagreementsettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        acctmgrtargetsettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        accountforecastsettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        industriesmanufacturingsettings: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        fieldservicemobileextension: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datasource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datasourceobject: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        externaldataconnector: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        dataconnectors3: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datastreamdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datapackagekitdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datasourcebundledefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datapackagekitobject: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datastreamtemplate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datasrcdatamodelfieldmap: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        mktdatatranobject: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
            children: {
                types: {
                    mktdatatranfield: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                suffixes: {
                    mktDataTranField: string;
                };
                directories: {
                    mktDataTranFields: string;
                };
            };
        };
        fieldsrctrgtrelationship: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        objectsourcetargetmap: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        benefitaction: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        loyaltyprogramsetup: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        channelobjectlinkingrule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        conversationvendorinfo: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        conversationvendorfielddef: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        schedulingrule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datamappingschema: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        datamappingobjectdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            children: {
                types: {
                    datamappingfielddefinition: {
                        id: string;
                        name: string;
                        directoryName: string;
                        suffix: string;
                    };
                };
                directories: {
                    fieldDefinitions: string;
                };
                suffixes: {
                    fieldDefinition: string;
                };
            };
            strategies: {
                adapter: string;
                transformer: string;
                decomposition: string;
            };
        };
        datamapping: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        federationdatamappingusage: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        connectedsystem: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            strictDirectoryName: boolean;
        };
        userauthcertificate: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        forecastingtypesource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        forecastingtype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        forecastingsourcedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        assistantversion: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        assistantskillsobjectaction: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        assistantskillquickaction: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        assistantdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        assistantcontextitem: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        advacctforecastperiodgroup: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        advaccountforecastset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        documentgenerationsetting: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        uiobjectrelationconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        carerequestconfiguration: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        mlrecommendationdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        applicationrecordtypeconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        mktcalcinsightobjectdef: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        internalorganization: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        callcenterroutingmap: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
        };
        viewdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        slackapp: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        fieldrestrictionrule: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        svccatalogcategory: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        svccatalogfulfillmentflow: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        svccatalogitemdef: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        omniuicard: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        omnidatatransform: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        omniscript: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        omniintegrationprocedure: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        bldgenrgyintensitycnfg: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        stnryassetenvsrccnfg: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        vehicleassetemssnsrccnfg: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        omniinteractionconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        uiviewdefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        productattributeset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        recordalertcategory: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        recordalertdatasource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        activationplatform: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        dataconnectoringestapi: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        datasourcetenant: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        esignatureconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        esignatureenvelopeconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        internaldataconnector: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mobsecuritycertpinconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mobilesecurityassignment: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mobilesecuritypolicy: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        mobilesecuritypolicyset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        applicationsubtypedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        businessprocesstypedefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        explainabilityactiondefinition: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        explainabilityactionversion: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        advacctforecastdimsource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        appointmentassignmentpolicy: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        carelimittype: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        omniinteractionaccessconfig: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        dataweaveresource: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
            strategies: {
                adapter: string;
            };
        };
        assessmentquestion: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        assessmentquestionset: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
        identityverificationprocdef: {
            id: string;
            name: string;
            suffix: string;
            directoryName: string;
            inFolder: boolean;
            strictDirectoryName: boolean;
        };
    };
    suffixes: {
        serviceAISetupDescription: string;
        serviceAISetupField: string;
        ai: string;
        aiapplicationconfig: string;
        aiUsecaseDefinitions: string;
        mlDataDefinition: string;
        icon: string;
        businessProcessGroup: string;
        model: string;
        goal: string;
        function: string;
        participantRole: string;
        gatewayProviderPaymentMethodType: string;
        careProviderSearchConfig: string;
        careSystemFieldMapping: string;
        documentType: string;
        ocrSampleDocument: string;
        ocrTemplate: string;
        apt: string;
        decisionTable: string;
        decisionTableDatasetLink: string;
        decisionMatrixDefinition: string;
        decisionMatrixDefinitionVersion: string;
        expressionSetDefinition: string;
        expressionSetDefinitionVersion: string;
        briefcaseDefinition: string;
        batchProcessJobDefinition: string;
        acctMgrTargetSetting: string;
        dataSourceObject: string;
        externalDataConnector: string;
        s3DataConnector: string;
        mktDataTranObject: string;
        fieldSrcTrgtRelationship: string;
        objectSourceTargetMap: string;
        benefitAction: string;
        loyaltyProgramSetup: string;
        installedPackage: string;
        labels: string;
        navigationMenu: string;
        scf: string;
        crt: string;
        messageChannel: string;
        component: string;
        page: string;
        queue: string;
        datatype: string;
        CaseSubjectParticle: string;
        dataSource: string;
        namedCredential: string;
        externalServiceRegistration: string;
        role: string;
        territory: string;
        group: string;
        uiplugin: string;
        globalValueSet: string;
        globalPicklist: string;
        standardValueSet: string;
        customPermission: string;
        object: string;
        reportType: string;
        report: string;
        dashboard: string;
        visualizationPlugin: string;
        snapshot: string;
        feedFilter: string;
        layout: string;
        weblink: string;
        custompageweblink: string;
        letter: string;
        email: string;
        quickAction: string;
        form: string;
        flexipage: string;
        tab: string;
        customApplicationComponent: string;
        app: string;
        portal: string;
        EmbeddedServiceConfig: string;
        EmbeddedServiceLiveAgent: string;
        EmbeddedServiceFieldService: string;
        EmbeddedServiceBranding: string;
        recommendationStrategy: string;
        flow: string;
        flowDefinition: string;
        flowtest: string;
        eventType: string;
        subscription: string;
        delivery: string;
        workflow: string;
        assignmentRules: string;
        autoResponseRules: string;
        escalationRules: string;
        postTemplate: string;
        approvalProcess: string;
        homePageComponent: string;
        homePageLayout: string;
        objectTranslation: string;
        fieldTranslation: string;
        translation: string;
        globalValueSetTranslation: string;
        standardValueSetTranslation: string;
        cls: string;
        trigger: string;
        testSuite: string;
        profile: string;
        permissionset: string;
        permissionsetgroup: string;
        md: string;
        profilePasswordPolicy: string;
        profileSessionSetting: string;
        datacategorygroup: string;
        remoteSite: string;
        cspTrustedSite: string;
        matchingRule: string;
        duplicateRule: string;
        cleanDataService: string;
        serviceChannel: string;
        queueRoutingConfig: string;
        servicePresenceStatus: string;
        presenceDeclineReason: string;
        presenceUserConfig: string;
        authprovider: string;
        wapp: string;
        wds: string;
        geodata: string;
        wlens: string;
        wdash: string;
        wcomp: string;
        xmd: string;
        wdf: string;
        wdpr: string;
        site: string;
        channelLayout: string;
        asset: string;
        marketingResourceType: string;
        sharingRules: string;
        sharingSet: string;
        community: string;
        ChatterExtension: string;
        callCenter: string;
        milestoneType: string;
        entitlementProcess: string;
        entitlementTemplate: string;
        notiftype: string;
        connectedApp: string;
        appMenu: string;
        delegateGroup: string;
        network: string;
        networkBranding: string;
        customExperience: string;
        communityThemeDefinition: string;
        brandingSet: string;
        flowCategory: string;
        lightningBolt: string;
        lightningExperienceTheme: string;
        communityTemplateDefinition: string;
        managedTopics: string;
        keywords: string;
        userCriteria: string;
        rule: string;
        territory2Type: string;
        territory2Model: string;
        territory2Rule: string;
        territory2: string;
        campaignInfluenceModel: string;
        samlssoconfig: string;
        dataPipeline: string;
        corsWhitelistOrigin: string;
        actionLinkGroupTemplate: string;
        licenseDefinition: string;
        transactionSecurityPolicy: string;
        policy: string;
        skill: string;
        liveChatDeployment: string;
        liveChatButton: string;
        liveChatAgentConfig: string;
        synonymDictionary: string;
        xorghub: string;
        pathAssistant: string;
        LeadConvertSetting: string;
        liveChatSensitiveDataRule: string;
        cachePartition: string;
        assistantRecommendationType: string;
        insightType: string;
        topicsForObjects: string;
        type: string;
        settings: string;
        orchestrationContext: string;
        orchestration: string;
        aiAssistantTemplate: string;
        featureParameterBoolean: string;
        featureParameterDate: string;
        featureParameterInteger: string;
        commandaction: string;
        batchCalcJobDefinition: string;
        oauthcustomscope: string;
        platformEventChannel: string;
        customHelpMenuSection: string;
        prompt: string;
        mlDomain: string;
        bot: string;
        botTemplate: string;
        botVersion: string;
        animationRule: string;
        deployment: string;
        EmbeddedServiceFlowConfig: string;
        platformEventChannelMember: string;
        Canvas: string;
        MobileApplicationDetail: string;
        lightningOnboardingConfig: string;
        reportFolder: string;
        dashboardFolder: string;
        documentFolder: string;
        emailFolder: string;
        inboundNetworkConnection: string;
        outboundNetworkConnection: string;
        inboundCertificate: string;
        mutingpermissionset: string;
        myDomainDiscoverableLogin: string;
        blacklistedConsumer: string;
        userProvisioningConfig: string;
        redirectWhitelistUrl: string;
        notifications: string;
        iframeWhiteListUrlSettings: string;
        config: string;
        managedContentType: string;
        paymentGatewayProvider: string;
        EmbeddedServiceMenuSettings: string;
        callCoachingMediaProvider: string;
        indx: string;
        entityImplements: string;
        audience: string;
        cmsConnectSource: string;
        platformEventSubscriberConfig: string;
        userProfileSearchScope: string;
        workSkillRouting: string;
        timeSheetTemplate: string;
        accountRelationshipShareRule: string;
        IPAddressRange: string;
        xml: string;
        mlPrediction: string;
        formSection: string;
        workflowFieldUpdate: string;
        workflowKnowledgePublish: string;
        workflowTask: string;
        workflowAlert: string;
        workflowSend: string;
        workflowOutboundMessage: string;
        workflowRule: string;
        assignmentRule: string;
        autoResponseRule: string;
        escalationRule: string;
        sharingOwnerRule: string;
        sharingCriteriaRule: string;
        sharingGuestRule: string;
        sharingTerritoryRule: string;
        managedTopic: string;
        workSkillRoutingAttribute: string;
        businessProcessFeedbackConfiguration: string;
        webStoreTemplate: string;
        dynamicTrigger: string;
        salesAgreementSetting: string;
        accountForecastSetting: string;
        fieldServiceMobileExtension: string;
        dataStreamDefinition: string;
        dataPackageKitDefinition: string;
        dataSourceBundleDefinition: string;
        DataPackageKitObject: string;
        dataStreamTemplate: string;
        dataSrcDataModelFieldMap: string;
        ChannelObjectLinkingRule: string;
        ConversationVendorInformation: string;
        ConversationVendorFieldDefinition: string;
        schedulingRule: string;
        dataMappingSchema: string;
        dataMappingObjectDefinition: string;
        fieldDefinition: string;
        dataMapping: string;
        federationDataMappingUsage: string;
        connectedSystem: string;
        userAuthCertificate: string;
        forecastingTypeSource: string;
        forecastingType: string;
        forecastingSourceDefinition: string;
        assistantVersion: string;
        assistantSkillSobjectAction: string;
        assistantSkillQuickAction: string;
        assistantDefinition: string;
        assistantContextItem: string;
        advAcctForecastPeriodGroup: string;
        advAccountForecastSet: string;
        documentGenerationSetting: string;
        uiObjectRelationConfig: string;
        careRequestConfiguration: string;
        mlRecommendation: string;
        applicationRecordTypeConfig: string;
        mktCalcInsightObjectDef: string;
        internalOrganization: string;
        callCenterRoutingMap: string;
        view: string;
        slackapp: string;
        permissionSetLicenseDefinition: string;
        category: string;
        fulfillmentFlow: string;
        catalogItem: string;
        ouc: string;
        rpt: string;
        mktDataTranField: string;
        os: string;
        oip: string;
        buildingEnergyIntensityConfig: string;
        stationaryAssetEnvSourceConfig: string;
        vehicleAssetEmssnSourceConfig: string;
        omniInteractionConfig: string;
        uiview: string;
        productAttributeSet: string;
        recordAlertCategory: string;
        recordAlertDataSource: string;
        activationPlatform: string;
        dataConnectorIngestApi: string;
        dataSourceTenant: string;
        eSignatureConfig: string;
        eSignatureEnvelopeConfig: string;
        internalDataConnector: string;
        mobSecurityCertPinConfig: string;
        mobileSecurityAssignment: string;
        mobileSecurityPolicy: string;
        mobileSecurityPolicySet: string;
        applicationSubtypeDefinition: string;
        businessProcessTypeDefinition: string;
        explainabilityActionDefinition: string;
        explainabilityActionVersion: string;
        advAcctForecastDimSource: string;
        careLimitType: string;
        omniInteractionAccessConfig: string;
        dwl: string;
        aq: string;
        aqs: string;
        identityverificationprocdef: string;
    };
    strictDirectoryNames: {
        experiences: string;
        aura: string;
        lwc: string;
        documents: string;
        waveTemplates: string;
        objects: string;
        bots: string;
        botTemplates: string;
        objectTranslations: string;
        staticresources: string;
        sites: string;
        restrictionRules: string;
        mktDataSources: string;
        accessControlPolicies: string;
        integrationHub: string;
        ObjectHierarchyRelationship: string;
        IndustriesManufacturingSettings: string;
        dataMappingObjectDefinitions: string;
        fieldRestrictionRules: string;
        siteDotComSites: string;
        appointmentSchedulingPolicies: string;
        appointmentAssignmentPolicies: string;
        emailservices: string;
    };
    childTypes: {
        customlabel: string;
        customfield: string;
        index: string;
        businessprocess: string;
        recordtype: string;
        compactlayout: string;
        weblink: string;
        validationrule: string;
        sharingreason: string;
        listview: string;
        fieldset: string;
        formsection: string;
        workflowknowledgepublish: string;
        workflowfieldupdate: string;
        workflowtask: string;
        workflowalert: string;
        workflowsend: string;
        workflowoutboundmessage: string;
        workflowrule: string;
        workskillroutingattribute: string;
        assignmentrule: string;
        autoresponserule: string;
        escalationrule: string;
        matchingrule: string;
        sharingownerrule: string;
        sharingguestrule: string;
        sharingterritoryrule: string;
        managedtopic: string;
        sharingcriteriarule: string;
        botversion: string;
        customfieldtranslation: string;
        datamappingfielddefinition: string;
        mktdatatranfield: string;
    };
}>;
