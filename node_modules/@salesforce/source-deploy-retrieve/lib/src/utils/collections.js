"use strict";
/*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.deepFreeze = exports.normalizeToArray = void 0;
/**
 * Normalize an object to be an array if it isn't one.
 *
 * @param entryOrArray - An object that could be an array of it's type or just its type
 * @returns An array of the input element
 */
function normalizeToArray(entryOrArray) {
    if (entryOrArray) {
        return Array.isArray(entryOrArray) ? entryOrArray : [entryOrArray];
    }
    return [];
}
exports.normalizeToArray = normalizeToArray;
/**
 * Deeply freezes an object, making the entire thing immutable.
 *
 * @param object - Object to deep freeze
 * @returns A deeply frozen version of the object
 */
function deepFreeze(object) {
    const propNames = Object.getOwnPropertyNames(object);
    for (const name of propNames) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        const val = object[name];
        if (val && typeof val === 'object') {
            deepFreeze(val);
        }
    }
    return Object.freeze(object);
}
exports.deepFreeze = deepFreeze;
//# sourceMappingURL=collections.js.map