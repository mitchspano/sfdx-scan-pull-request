import { RegistryAccess } from '../registry';
import { TreeContainer } from './treeContainers';
import { MetadataComponent } from './types';
export interface PackageTypeMembers {
    name: string;
    members: string[];
}
export interface PackageManifest {
    types: PackageTypeMembers[];
    version: string;
}
export interface ResolveManifestResult {
    components: MetadataComponent[];
    apiVersion: string;
    fullName?: string;
}
/**
 * Resolve MetadataComponents from a manifest file (package.xml)
 */
export declare class ManifestResolver {
    private tree;
    private registry;
    constructor(tree?: TreeContainer, registry?: RegistryAccess);
    resolve(manifestPath: string): Promise<ResolveManifestResult>;
    private isNestedInFolder;
}
