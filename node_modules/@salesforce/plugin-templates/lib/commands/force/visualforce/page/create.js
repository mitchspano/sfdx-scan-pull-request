"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const command_1 = require("@salesforce/command");
const visualforcePageGenerator_1 = require("@salesforce/templates/lib/generators/visualforcePageGenerator");
const utils_1 = require("@salesforce/templates/lib/utils");
const utils_2 = require("../../../../utils");
const visualforcePageFileSuffix = /.page$/;
const VF_TYPE = utils_2.MessageUtil.get('Page');
class VisualforcePage extends utils_2.TemplateCommand {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.runGenerator(visualforcePageGenerator_1.default);
        });
    }
}
exports.default = VisualforcePage;
VisualforcePage.description = utils_2.MessageUtil.buildDescription('VFDescription', false, [VF_TYPE]);
VisualforcePage.examples = [
    '$ sfdx force:visualforce:page:create -n mypage -l mylabel',
    '$ sfdx force:visualforce:page:create -n mypage -l mylabel -d pages'
];
VisualforcePage.help = utils_2.MessageUtil.buildHelpText(VisualforcePage.examples, false);
VisualforcePage.longDescription = utils_2.MessageUtil.get('VFLongDescription', [
    VF_TYPE,
    VF_TYPE
]);
VisualforcePage.flagsConfig = {
    template: command_1.flags.string({
        char: 't',
        description: utils_2.MessageUtil.get('TemplateFlagDescription'),
        longDescription: utils_2.MessageUtil.get('TemplateFlagLongDescription'),
        default: 'DefaultVFPage',
        options: utils_1.CreateUtil.getCommandTemplatesForFiletype(visualforcePageFileSuffix, 'visualforcepage')
    }),
    outputdir: command_1.flags.string({
        char: 'd',
        description: utils_2.MessageUtil.get('OutputDirFlagDescription'),
        longDescription: utils_2.MessageUtil.get('OutputDirFlagLongDescription'),
        default: '.'
    }),
    pagename: command_1.flags.string({
        char: 'n',
        description: utils_2.MessageUtil.get('VFNameFlagDescription', [VF_TYPE]),
        longDescription: utils_2.MessageUtil.get('VFNameFlagLongDescription', [VF_TYPE]),
        required: true
    }),
    apiversion: command_1.flags.builtin(),
    label: command_1.flags.string({
        char: 'l',
        description: utils_2.MessageUtil.get('VFLabelFlagDescription', [VF_TYPE]),
        longDescription: utils_2.MessageUtil.get('VFLabelFlagLongDescription', [VF_TYPE]),
        required: true
    })
};
//# sourceMappingURL=create.js.map