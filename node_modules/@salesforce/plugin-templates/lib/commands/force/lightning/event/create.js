"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const command_1 = require("@salesforce/command");
const lightningEventGenerator_1 = require("@salesforce/templates/lib/generators/lightningEventGenerator");
const utils_1 = require("@salesforce/templates/lib/utils");
const utils_2 = require("../../../../utils");
const lightningEventFileSuffix = /.evt$/;
const BUNDLE_TYPE = utils_2.MessageUtil.get('Event');
class LightningEvent extends utils_2.TemplateCommand {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.runGenerator(lightningEventGenerator_1.default);
        });
    }
}
exports.default = LightningEvent;
LightningEvent.description = utils_2.MessageUtil.buildDescription('LightningDescription', true, [BUNDLE_TYPE]);
LightningEvent.examples = [
    '$ sfdx force:lightning:event:create -n myevent',
    '$ sfdx force:lightning:event:create -n myevent -d aura'
];
LightningEvent.help = utils_2.MessageUtil.buildHelpText(LightningEvent.examples, true);
LightningEvent.longDescription = utils_2.MessageUtil.get('LightningLongDescription', [
    BUNDLE_TYPE
]);
LightningEvent.flagsConfig = {
    eventname: command_1.flags.string({
        char: 'n',
        description: utils_2.MessageUtil.get('LightningNameFlagDescription', [
            BUNDLE_TYPE
        ]),
        longDescription: utils_2.MessageUtil.get('LightningNameFlagLongDescription', [
            BUNDLE_TYPE
        ]),
        required: true
    }),
    template: command_1.flags.string({
        char: 't',
        description: utils_2.MessageUtil.get('TemplateFlagDescription'),
        longDescription: utils_2.MessageUtil.get('TemplateFlagLongDescription'),
        default: 'DefaultLightningEvt',
        options: utils_1.CreateUtil.getCommandTemplatesForFiletype(lightningEventFileSuffix, 'lightningevent')
    }),
    outputdir: command_1.flags.string({
        char: 'd',
        description: utils_2.MessageUtil.get('OutputDirFlagDescription'),
        longDescription: utils_2.MessageUtil.get('OutputDirFlagLongDescription'),
        default: '.'
    }),
    apiversion: command_1.flags.builtin(),
    internal: command_1.flags.boolean({
        char: 'i',
        description: utils_2.MessageUtil.get('LightningInternalFlagDescription'),
        hidden: true
    })
};
//# sourceMappingURL=create.js.map