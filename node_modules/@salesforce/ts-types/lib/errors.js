"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonCloneError = exports.UnexpectedValueTypeError = exports.AssertionFailedError = exports.NamedError = void 0;
/**
 * A minimal `NamedError` implementation not intended for widespread use -- just enough to support this library's needs.
 * For a complete `NamedError` solution, see [@salesforce/kit]{@link https://preview.npmjs.com/package/@salesforce/kit}.
 */
class NamedError extends Error {
    constructor(name, message) {
        super(message);
        this.name = name;
    }
}
exports.NamedError = NamedError;
/**
 * Indicates an unexpected type was encountered during a type-narrowing operation.
 */
class AssertionFailedError extends NamedError {
    constructor(message) {
        super('AssertionFailedError', message);
    }
}
exports.AssertionFailedError = AssertionFailedError;
/**
 * Indicates an unexpected type was encountered during a type-narrowing operation.
 */
class UnexpectedValueTypeError extends NamedError {
    constructor(message) {
        super('UnexpectedValueTypeError', message);
    }
}
exports.UnexpectedValueTypeError = UnexpectedValueTypeError;
/**
 * Indicates an error while performing a JSON clone operation.
 */
class JsonCloneError extends NamedError {
    constructor(cause) {
        super('JsonCloneError', cause.message);
    }
}
exports.JsonCloneError = JsonCloneError;
//# sourceMappingURL=errors.js.map