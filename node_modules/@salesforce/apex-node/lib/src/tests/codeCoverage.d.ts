import { Connection } from '@salesforce/core';
import { CodeCoverageResult, PerClassCoverage } from './types';
export declare class CodeCoverage {
    readonly connection: Connection;
    constructor(connection: Connection);
    /**
     * Returns the string representation of the org wide coverage percentage for a given username connection from OrgWideCoverage entity
     * @returns Org wide coverage percentage for a given username connection
     */
    getOrgWideCoverage(): Promise<string>;
    /**
     * Returns the code coverage information for each Apex class covered by each Apex test method from ApexCodeCoverage entity
     * @param apexTestClassSet Set of Apex test classes
     * @returns The code coverage information associated with each Apex test class
     * NOTE: a test could cover more than one class, result map should contain a record for each covered class
     */
    getPerClassCodeCoverage(apexTestClassSet: Set<string>): Promise<Map<string, PerClassCoverage[]>>;
    /**
     * Returns the aggregate code coverage information from ApexCodeCoverageAggregate entity for a given set of Apex classes
     * @param apexClassIdSet Set of ids for Apex classes
     * @returns The aggregate code coverage information for the given set of Apex classes
     */
    getAggregateCodeCoverage(apexClassIdSet: Set<string>): Promise<{
        codeCoverageResults: CodeCoverageResult[];
        totalLines: number;
        coveredLines: number;
    }>;
    private queryPerClassCodeCov;
    private queryAggregateCodeCov;
    private fetchResults;
    private createQueries;
}
