import { Connection, Org, StreamingClient } from '@salesforce/core';
import { AnyJson } from '@salesforce/ts-types';
import { ApexLogGetOptions, LogRecord, LogResult } from './types';
declare type StreamingLogMessage = {
    errorName?: string;
    sobject: {
        Id: string;
    };
};
export declare class LogService {
    readonly connection: Connection;
    private logger;
    private logTailer?;
    constructor(connection: Connection);
    getLogIds(options: ApexLogGetOptions): Promise<string[]>;
    getLogs(options: ApexLogGetOptions): Promise<LogResult[]>;
    getLogById(logId: string): Promise<LogResult>;
    getLogRecords(numberOfLogs?: number): Promise<LogRecord[]>;
    tail(org: Org, tailer?: (log: string) => void): Promise<void>;
    createStreamingClient(org: Org): Promise<StreamingClient>;
    logCallback(message: StreamingLogMessage): Promise<void>;
    private streamingCallback;
    prepareTraceFlag(requestedDebugLevel: string): Promise<void>;
    toolingRequest(url: string): Promise<AnyJson>;
}
export {};
