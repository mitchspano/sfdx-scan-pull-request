import { ApexCodeCoverage, ApexCodeCoverageAggregate } from '../tests/types';
import * as libReport from 'istanbul-lib-report';
import * as reports from 'istanbul-reports';
export declare type CoverageReportFormats = reports.ReportType;
export declare const DefaultWatermarks: libReport.Watermarks;
export declare const DefaultReportOptions: Partial<reports.ReportOptions>;
export interface CoverageReporterOptions {
    reportFormats?: CoverageReportFormats[];
    reportOptions?: Partial<typeof DefaultReportOptions>;
    watermark?: typeof DefaultWatermarks;
}
/**
 * Utility class to produce various well-known code coverage reports from Apex test coverage results.
 */
export declare class CoverageReporter {
    private readonly coverage;
    private readonly reportDir;
    private readonly sourceDir;
    private readonly options?;
    private coverageMap;
    /**
     *
     * @param coverage - instance of either a ApexCodeCoverageAggregate or ApexCodeCoverage object
     * @param reportDir - Directory to where the requested coverage reports will be written
     * @param sourceDir - Source directory for those Apex classes or triggers included in coverage data
     * @param options - CoverageReporterOptions
     */
    constructor(coverage: ApexCodeCoverageAggregate | ApexCodeCoverage, reportDir: string, sourceDir: string, options?: CoverageReporterOptions);
    generateReports(): void;
    private buildCoverageMap;
    private findFullPathToClass;
}
