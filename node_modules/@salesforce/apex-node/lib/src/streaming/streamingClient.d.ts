import { Connection } from '@salesforce/core';
import { TestResultMessage } from './types';
import { Progress } from '../common';
import { ApexTestProgressValue, ApexTestQueueItem } from '../tests/types';
export interface AsyncTestRun {
    runId: string;
    queueItem: ApexTestQueueItem;
}
export declare class Deferred<T> {
    promise: Promise<T>;
    resolve: Function;
    constructor();
}
export declare class StreamingClient {
    private client;
    private conn;
    private progress?;
    private apiVersion;
    subscribedTestRunId: string;
    private subscribedTestRunIdDeferred;
    get subscribedTestRunIdPromise(): Promise<string>;
    private removeTrailingSlashURL;
    getStreamURL(instanceUrl: string): string;
    constructor(connection: Connection, progress?: Progress<ApexTestProgressValue>);
    init(): Promise<void>;
    handshake(): Promise<void>;
    disconnect(): void;
    hasDisconnected: boolean;
    subscribe(action?: () => Promise<string>, testRunId?: string): Promise<AsyncTestRun>;
    private isValidTestRunID;
    handler(message?: TestResultMessage, runId?: string): Promise<ApexTestQueueItem>;
    private getCompletedTestRun;
}
