import { UX } from '@salesforce/command';
import { Logger } from '@salesforce/core';
import { RetrieveResult, MetadataApiRetrieveStatus, RequestStatus } from '@salesforce/source-deploy-retrieve';
import { RetrieveFormatter } from '../retrieveFormatter';
import { ResultFormatterOptions } from '../resultFormatter';
export declare type RetrieveCommandResult = Omit<MetadataApiRetrieveStatus, 'zipFile'> & {
    zipFilePath: string;
};
export interface RetrieveResultFormatterOptions extends ResultFormatterOptions {
    retrieveTargetDir: string;
    zipFileName?: string;
    unzip?: boolean;
}
export interface RetrieveCommandAsyncResult {
    done: boolean;
    id: string;
    state: RequestStatus | 'Queued';
    status: RequestStatus | 'Queued';
    timedOut: boolean;
}
export declare class RetrieveResultFormatter extends RetrieveFormatter {
    options: RetrieveResultFormatterOptions;
    protected zipFilePath: string;
    constructor(logger: Logger, ux: UX, options: RetrieveResultFormatterOptions, result: RetrieveResult);
    /**
     * Get the JSON output from the RetrieveResult.
     *
     * @returns RetrieveCommandResult
     */
    getJson(): RetrieveCommandResult;
    /**
     * Displays retrieve results in human format.
     */
    display(): void;
    private displaySuccesses;
}
