"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConvertResultFormatter = void 0;
const path_1 = require("path");
const core_1 = require("@salesforce/core");
const resultFormatter_1 = require("./resultFormatter");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-source', 'convert');
class ConvertResultFormatter extends resultFormatter_1.ResultFormatter {
    constructor(logger, ux, result) {
        super(logger, ux);
        this.result = result;
    }
    getJson() {
        return {
            location: (0, path_1.resolve)(this.result.packagePath),
        };
    }
    display() {
        if (this.isSuccess()) {
            this.ux.log(messages.getMessage('success', [this.result.packagePath]));
        }
        else {
            throw new core_1.SfError(messages.getMessage('convertFailed'), 'ConvertFailed');
        }
    }
}
exports.ConvertResultFormatter = ConvertResultFormatter;
//# sourceMappingURL=convertResultFormatter.js.map