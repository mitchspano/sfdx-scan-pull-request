import { FlagsConfig } from '@salesforce/command';
import { FileResponse } from '@salesforce/source-deploy-retrieve';
import { SourceTracking } from '@salesforce/source-tracking';
import { DeployCommand } from '../../../deployCommand';
import { DeployCommandResult } from '../../../formatters/deployResultFormatter';
export declare class Delete extends DeployCommand {
    static readonly description: string;
    static readonly examples: string[];
    static readonly requiresProject = true;
    static readonly requiresUsername = true;
    static readonly flagsConfig: FlagsConfig;
    protected fileResponses: FileResponse[];
    protected tracking: SourceTracking;
    protected readonly lifecycleEventNames: string[];
    private deleteResultFormatter;
    private aborted;
    private components;
    private mixedDeployDelete;
    private stashPath;
    private tempDir;
    run(): Promise<DeployCommandResult>;
    protected preChecks(): Promise<void>;
    protected delete(): Promise<void>;
    /**
     * Checks the response status to determine whether the delete was successful.
     */
    protected resolveSuccess(): Promise<void>;
    protected formatResult(): DeployCommandResult;
    private maybeUpdateTracking;
    private deleteFilesLocally;
    private moveFileToStash;
    private restoreFileFromStash;
    private deleteStash;
    private moveBundleToManifest;
    private handlePrompt;
}
