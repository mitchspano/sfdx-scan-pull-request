"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForceCommand = void 0;
// This is a doc command
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const got_1 = require("got");
const core_1 = require("@oclif/core");
const ProxyAgent = require("proxy-agent");
const proxy_from_env_1 = require("proxy-from-env");
const core_2 = require("@salesforce/core");
const getAsciiSignature = (apiVersion) => `
                 DX DX DX
             DX DX DX DX DX DX          DX DX DX
          DX DX DX      DX DX DX    DX DX DX DX DX DX
        DX DX              DX DX DX DX DX     DX DX DX
       DX DX                 DX DX DX             DX DX    DX DX DX
      DX DX                    DX DX                DX DX DX DX DX DX DX
     DX DX                                          DX DX DX       DX DX DX
     DX DX                                            DX             DX DX DX
      DX DX                                                              DX DX
      DX DX                                                               DX DX
       DX DX                                                              DX DX
     DX DX                                                                 DX DX
   DX DX                                                                   DX DX
 DX DX                                                                     DX DX
DX DX                                                                     DX DX
DX DX                                                                    DX DX
DX DX                                                                   DX DX
 DX DX                                                    DX          DX DX
 DX DX                                                  DX DX DX DX DX DX
  DX DX                                                 DX DX DX DX DX
    DX DX DX   DX DX                     DX           DX DX
       DX DX DX DX DX                   DX DX DX DX DX DX
          DX DX  DX DX                  DX DX DX DX DX
                  DX DX              DX DX
                    DX DX DX     DX DX DX
                      DX DX DX DX DX DX                     v${apiVersion}
                          DX DX DX

* Salesforce CLI Release Notes: https://github.com/forcedotcom/cli/tree/main/releasenotes
* Salesforce DX Setup Guide: https://sfdc.co/sfdx_setup_guide
* Salesforce DX Developer Guide: https://sfdc.co/sfdx_dev_guide
* Salesforce CLI Command Reference: https://sfdc.co/sfdx_cli_reference
* Salesforce Extensions for VS Code: https://marketplace.visualstudio.com/items?itemName=salesforce.salesforcedx-vscode
`;
const getCurrentApiVersion = async () => {
    const apiFromConfig = core_2.ConfigAggregator.getValue('apiVersion').value;
    if (apiFromConfig) {
        return apiFromConfig;
    }
    const url = 'https://mdcoverage.secure.force.com/services/apexrest/report';
    return `${JSON.parse((await (0, got_1.default)(url, {
        agent: { https: ProxyAgent((0, proxy_from_env_1.getProxyForUrl)(url)) },
    })).body).versions.selected.toString()}.0`;
};
class ForceCommand extends command_1.SfdxCommand {
    async run() {
        const apiVersion = await getCurrentApiVersion();
        this.ux.log(getAsciiSignature(apiVersion));
        return { apiVersion };
    }
    // overrides the help so that it shows the help for the `force` topic and not "help" for this command
    _help() {
        const help = new core_1.Help(this.config);
        // We need to include force in the args for topics to be shown
        void help.showHelp(process.argv.slice(2));
        return this.exit(0);
    }
}
exports.ForceCommand = ForceCommand;
ForceCommand.hidden = true;
//# sourceMappingURL=force.js.map