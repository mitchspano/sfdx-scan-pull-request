"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaSObjectDescribe = void 0;
const os = require("os");
const command_1 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-schema', 'describe');
class SchemaSObjectDescribe extends command_1.SfdxCommand {
    async run() {
        const conn = this.org.getConnection();
        const description = this.flags.usetoolingapi
            ? await conn.tooling.describe(this.flags.sobjecttype)
            : await conn.describe(this.flags.sobjecttype);
        if (!this.flags.json) {
            this.ux.logJson(description);
        }
        return description;
    }
}
exports.SchemaSObjectDescribe = SchemaSObjectDescribe;
SchemaSObjectDescribe.description = messages.getMessage('description');
SchemaSObjectDescribe.examples = messages.getMessage('examples').split(os.EOL);
SchemaSObjectDescribe.flagsConfig = {
    sobjecttype: command_1.flags.string({
        char: 's',
        required: true,
        description: messages.getMessage('flags.objectType'),
    }),
    usetoolingapi: command_1.flags.boolean({
        char: 't',
        description: messages.getMessage('flags.useTooling'),
    }),
};
SchemaSObjectDescribe.requiresUsername = true;
//# sourceMappingURL=describe.js.map