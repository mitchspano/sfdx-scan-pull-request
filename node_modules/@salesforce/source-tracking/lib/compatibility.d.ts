import { Org } from '@salesforce/core';
declare type TrackingFileVersion = 'plugin-source' | 'toolbelt' | 'none';
export declare const hasSfdxTrackingFiles: (orgId: string, projectPath: string) => boolean;
/**
 * A project can have "old" (toolbelt), "new" (plugin-source) or "none" tracking files
 *
 * @deprecated use only during transition to new source-tracking commands
 */
export declare const getTrackingFileVersion: (org: Org, projectPath: string) => TrackingFileVersion;
/**
 * Convenient wrapper for throwing errors with helpful messages so commands don't have to
 *
 * @deprecated use only during transition to new source-tracking commands
 *
 * @param org: an Org, typically from a command's this.org
 * @param project: the project path, typically from this.project.
 * @param toValidate: whether your command lives in 'toolbelt' or 'plugin-source'
 * @param command: the command itself including all flags.  Echoed with modification for the user
 */
export declare const throwIfInvalid: ({ org, projectPath, toValidate, command, }: {
    org: Org;
    projectPath: string;
    toValidate: Omit<TrackingFileVersion, 'none'>;
    command: string;
}) => void;
/**
 * @deprecated use only during transition to new source-tracking commands
 * @param input the string that might contain things that would be replaced
 * @param reverse use the mappings backward
 * @returns string
 */
export declare const replaceRenamedCommands: (input: string, reverse?: boolean) => string;
export {};
