import { Dictionary, JsonMap } from '@salesforce/ts-types';
import { Org } from '@salesforce/core';
export interface ImportConfig {
    contentType?: string;
    sobjectTreeFiles?: string[];
    plan?: string;
}
interface ResponseRefs {
    referenceId: string;
    id: string;
}
export interface ImportResults {
    responseRefs?: ResponseRefs[];
    sobjectTypes?: Dictionary;
    errors?: string[];
}
/**
 * Imports data into an org that was exported to files using the export API.
 */
export declare class ImportApi {
    private readonly org;
    private logger;
    private responseRefs;
    private sobjectUrlMap;
    private schemaValidator;
    private sobjectTypes;
    private config;
    private importPlanConfig;
    constructor(org: Org);
    /**
     * Inserts given SObject Tree content into given target Org.
     *
     * @param config
     */
    import(config: ImportConfig): Promise<ImportResults>;
    getSchema(): JsonMap;
    private getPlanPromises;
    /**
     * Validates the import configuration.  If a plan is passed, validates
     * the plan per the schema.
     *
     * @param config - The data import configuration.
     * @returns Promise.<ImportConfig>
     */
    private validate;
    /**
     * Create a hash of sobject { ReferenceId: Type } assigned to this.sobjectTypes.
     * Used to display the sobject type in the results.
     *
     * @param content  The content string defined by the file(s).
     * @param isJson
     */
    private createSObjectTypeMap;
    private getSObjectTreeFileMeta;
    private parseSObjectTreeFile;
    private sendSObjectTreeRequest;
    private parseSObjectTreeResponse;
    private importSObjectTreeFile;
}
export {};
