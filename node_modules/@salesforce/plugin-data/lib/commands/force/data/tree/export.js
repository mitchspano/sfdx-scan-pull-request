"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const os = require("os");
const command_1 = require("@salesforce/command");
const command_2 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
const exportApi_1 = require("../../../../api/data/tree/exportApi");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-data', 'tree.export');
class Export extends command_1.SfdxCommand {
    async run() {
        const { query, plan, prefix, outputdir: outputDir } = this.flags;
        const exportApi = new exportApi_1.ExportApi(this.org, this.ux);
        const exportConfig = {
            outputDir: outputDir,
            plan: plan,
            prefix: prefix,
            query: query,
        };
        return exportApi.export(exportConfig);
    }
}
exports.default = Export;
Export.description = messages.getMessage('description');
Export.examples = messages.getMessage('examples').split(os.EOL);
Export.requiresUsername = true;
Export.flagsConfig = {
    query: command_2.flags.string({
        char: 'q',
        description: messages.getMessage('query'),
        required: true,
    }),
    plan: command_2.flags.boolean({
        char: 'p',
        description: messages.getMessage('plan'),
    }),
    prefix: command_2.flags.string({
        char: 'x',
        description: messages.getMessage('prefix'),
    }),
    outputdir: command_2.flags.directory({
        char: 'd',
        description: messages.getMessage('outputdir'),
    }),
};
//# sourceMappingURL=export.js.map