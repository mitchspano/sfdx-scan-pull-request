"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const os = require("os");
const core_1 = require("@salesforce/core");
const alias_1 = require("../../alias");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-alias', 'set');
class Set extends alias_1.AliasCommand {
    async run() {
        const varargs = this.varargs || {};
        const stateAggregator = await core_1.StateAggregator.getInstance();
        const results = Object.keys(varargs).map((key) => {
            const value = varargs[key];
            stateAggregator.aliases.set(key, value !== null && value !== void 0 ? value : 'undefined');
            return { alias: key, value };
        });
        await stateAggregator.aliases.write();
        this.output(alias_1.Command.Set, results);
        return results;
    }
}
exports.default = Set;
Set.description = messages.getMessage('description');
Set.examples = messages.getMessage('examples').split(os.EOL);
Set.varargs = { required: true };
Set.aliases = ['force:alias:set'];
//# sourceMappingURL=set.js.map