"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Package1VersionDisplayCommand = void 0;
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const messages = Messages();
class Package1VersionDisplayCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const Package1VersionDisplayCommandImpl = require('../../../../lib/package1/package1VersionDisplayCommand');
        return this.execLegacyCommand(new Package1VersionDisplayCommandImpl(context.org), context);
    }
}
exports.Package1VersionDisplayCommand = Package1VersionDisplayCommand;
Package1VersionDisplayCommand.theDescription = messages.getMessage('package1VersionDisplayCommandCliDescription');
Package1VersionDisplayCommand.longDescription = messages.getMessage('package1VersionDisplayCommandLongDescription');
Package1VersionDisplayCommand.help = messages.getMessage('package1VersionDisplayCommandCliHelp');
Package1VersionDisplayCommand.requiresUsername = true;
Package1VersionDisplayCommand.requiresProject = true;
Package1VersionDisplayCommand.flagsConfig = {
    packageversionid: command_1.flags.id({
        char: 'i',
        description: messages.getMessage('package1VersionDisplayCommandPackageId'),
        longDescription: messages.getMessage('package1VersionDisplayCommandPackageIdLong'),
        required: true,
    }),
};

//# sourceMappingURL=display.js.map
