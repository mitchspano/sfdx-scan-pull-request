"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageVersionPromoteCommand = void 0;
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const messages = Messages();
const consts = require("../../../../lib/core/constants");
class PackageVersionPromoteCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const PackageVersionPromoteCommandImpl = require('../../../../lib/package/packageVersionPromoteCommand');
        const packageVersionPromoteCommand = new PackageVersionPromoteCommandImpl();
        return this.execLegacyCommand(packageVersionPromoteCommand, context);
    }
}
exports.PackageVersionPromoteCommand = PackageVersionPromoteCommand;
PackageVersionPromoteCommand.theDescription = messages.getMessage('cliDescription', [], 'package_version_promote');
PackageVersionPromoteCommand.longDescription = messages.getMessage('cliDescriptionLong', [], 'package_version_promote');
PackageVersionPromoteCommand.help = messages.getMessage('help', [], 'package_version_promote');
PackageVersionPromoteCommand.orgType = consts.DEFAULT_DEV_HUB_USERNAME;
PackageVersionPromoteCommand.requiresDevhubUsername = true;
PackageVersionPromoteCommand.requiresProject = true;
PackageVersionPromoteCommand.flagsConfig = {
    package: command_1.flags.string({
        char: 'p',
        description: messages.getMessage('package', [], 'package_version_promote'),
        longDescription: messages.getMessage('packageLong', [], 'package_version_promote'),
        required: true,
    }),
    noprompt: command_1.flags.boolean({
        char: 'n',
        description: messages.getMessage('setasreleasedForce', [], 'package_version_promote'),
        longDescription: messages.getMessage('setasreleasedForceLong', [], 'package_version_promote'),
        required: false,
    }),
};

//# sourceMappingURL=promote.js.map
