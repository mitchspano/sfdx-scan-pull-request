"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageVersionCreateReportCommand = void 0;
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../../ToolbeltCommand");
const messages = Messages();
const consts = require("../../../../../lib/core/constants");
class PackageVersionCreateReportCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const PackageVersionCreateRequestReportCommand = require('../../../../../lib/package/packageVersionCreateRequestReportCommand');
        return this.execLegacyCommand(new PackageVersionCreateRequestReportCommand(), context);
    }
}
exports.PackageVersionCreateReportCommand = PackageVersionCreateReportCommand;
PackageVersionCreateReportCommand.theDescription = messages.getMessage('cliDescription', [], 'package_version_create_report');
PackageVersionCreateReportCommand.longDescription = messages.getMessage('cliLongDescription', [], 'package_version_create_report');
PackageVersionCreateReportCommand.help = messages.getMessage('help', [], 'package_version_create_report');
PackageVersionCreateReportCommand.requiresProject = false;
PackageVersionCreateReportCommand.orgType = consts.DEFAULT_DEV_HUB_USERNAME;
PackageVersionCreateReportCommand.requiresDevhubUsername = true;
PackageVersionCreateReportCommand.flagsConfig = {
    packagecreaterequestid: command_1.flags.id({
        char: 'i',
        description: messages.getMessage('requestId', [], 'package_version_create_report'),
        longDescription: messages.getMessage('requestIdLong', [], 'package_version_create_report'),
        required: true,
    }),
};

//# sourceMappingURL=report.js.map
