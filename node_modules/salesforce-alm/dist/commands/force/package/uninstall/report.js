"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageUninstallReportCommand = void 0;
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const command_1 = require("@salesforce/command");
const Messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const messages = Messages();
class PackageUninstallReportCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const PackageUninstallRequestReportCommand = require('../../../../lib/package/PackageUninstallRequestReportCommand');
        return this.execLegacyCommand(new PackageUninstallRequestReportCommand(), context);
    }
}
exports.PackageUninstallReportCommand = PackageUninstallReportCommand;
PackageUninstallReportCommand.theDescription = messages.getMessage('cliDescription', [], 'package_uninstall_report');
PackageUninstallReportCommand.longDescription = messages.getMessage('cliDescriptionLong', [], 'package_uninstall_report');
PackageUninstallReportCommand.help = messages.getMessage('help', [], 'package_uninstall_report');
PackageUninstallReportCommand.requiresProject = false;
PackageUninstallReportCommand.requiresUsername = true;
PackageUninstallReportCommand.flagsConfig = {
    requestid: command_1.flags.id({
        char: 'i',
        description: messages.getMessage('requestId', [], 'package_uninstall_report'),
        longDescription: messages.getMessage('requestIdLong', [], 'package_uninstall_report'),
        required: true,
    }),
};

//# sourceMappingURL=report.js.map
