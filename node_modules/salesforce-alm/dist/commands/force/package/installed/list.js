"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageInstalledListCommand = void 0;
// This is the legacy converted command file. Ignoring code-coverage since this is generated.
// THIS SHOULD BE REMOVED WHEN CONVERTED TO EXTEND SfdxCommand
/* istanbul ignore file */
const Messages = require("../../../../lib/messages");
const ToolbeltCommand_1 = require("../../../../ToolbeltCommand");
const messages = Messages();
const consts = require("../../../../lib/core/constants");
class PackageInstalledListCommand extends ToolbeltCommand_1.ToolbeltCommand {
    async run() {
        const context = await this.resolveLegacyContext();
        const packageInstalledListCommand = require('../../../../lib/package/packageInstalledListCommand');
        return this.execLegacyCommand(new packageInstalledListCommand.packageInstalledListCommand(), context);
    }
}
exports.PackageInstalledListCommand = PackageInstalledListCommand;
PackageInstalledListCommand.theDescription = messages.getMessage('cliDescription', [], 'package_installed_list');
PackageInstalledListCommand.longDescription = messages.getMessage('cliLongDescription', [], 'package_installed_list');
PackageInstalledListCommand.help = messages.getMessage('help', [], 'package_installed_list');
PackageInstalledListCommand.orgType = consts.DEFAULT_USERNAME;
PackageInstalledListCommand.requiresUsername = true;
PackageInstalledListCommand.requiresProject = true;

//# sourceMappingURL=list.js.map
