declare class PackageCreateCommand {
    [property: string]: any;
    constructor();
    orgDependent: boolean;
    /**
     * Convert the list of command line options to a JSON object that can be used to create a Package2 entity.
     *
     * @param context
     * @returns {{Name: (string|string|*), Description: (boolean|string|string|*), NamespacePrefix: (string|s)}}
     * @private
     */
    _createPackage2RequestFromContext(context: any): {
        Name: any;
        Description: any;
        NamespacePrefix: any;
        ContainerOptions: any;
        IsOrgDependent: any;
        PackageErrorUsername: any;
    };
    execute(context: any): any;
    _execute(context: any): any;
    /**
     * Generate packageDirectory json entry for this package that can be written to sfdx-project.json
     *
     * @param context
     * @param packageId the 0Ho id of the package to create the entry for
     * @private
     */
    _generatePackageDirEntry(context: any): {
        packageDirectories: any;
    };
    /**
     * Generate package alias json entry for this package that can be written to sfdx-project.json
     *
     * @param context
     * @param packageId the 0Ho id of the package to create the alias entry for
     * @private
     */
    _generatePackageAliasEntry(context: any, packageId: any): {
        packageAliases: any;
    };
    /**
     * returns a human readable message for a cli output
     *
     * @param result - the data representing the Package Version
     * @returns {string}
     */
    getHumanSuccessMessage(result: any): string;
}
export = PackageCreateCommand;
