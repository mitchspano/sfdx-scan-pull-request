declare class PackageVersionListCommand {
    static DEFAULT_SELECT: string;
    static VERBOSE_SELECT: string;
    static DEFAULT_ORDER_BY_FIELDS: string;
    [property: string]: any;
    constructor();
    execute(context: any): any;
    _execute(context: any): any;
    _getLastDays(paramName: any, lastDays: any): any;
    _constructWhere(idsOrAliases: any, createdLastDays: any, lastModLastDays: any): any[];
    _assembleQueryParts(select: any, where?: any[], orderBy?: string): string;
    _constructQuery(flags?: any): string;
    /**
     * indicates that the human readable message should be tabular
     *
     * @returns {[{}...]}
     */
    getColumnData(): {
        Package2Name: {
            header: string;
        };
        NamespacePrefix: {
            header: string;
        };
        Name: {
            header: string;
        };
        Version: {
            header: any;
        };
        SubscriberPackageVersionId: {
            header: any;
        };
        Alias: {
            header: any;
        };
        IsPasswordProtected: {
            header: any;
        };
        IsReleased: {
            header: string;
        };
        ValidationSkipped: {
            header: any;
        };
        AncestorId: {
            header: string;
        };
        AncestorVersion: {
            header: string;
        };
        Branch: {
            header: any;
        };
    } | {
        Package2Id: {
            header: any;
        };
        Version: {
            header: any;
        };
        SubscriberPackageVersionId: {
            header: any;
        };
        IsReleased: {
            header: string;
        };
    };
}
export = PackageVersionListCommand;
