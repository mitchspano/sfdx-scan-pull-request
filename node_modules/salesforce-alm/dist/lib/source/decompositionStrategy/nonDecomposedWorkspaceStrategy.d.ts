import { Nullable } from '@salesforce/ts-types';
import { MetadataDocumentAnnotation } from '../metadataDocument';
import { DecompositionWorkspaceStrategy } from './decompositionWorkspaceStrategy';
import { DecomposedSubtypeConfig } from './decompositionConfig';
/**
 * Workspace decomposition strategy where metadata files do not require decomposition
 */
export declare class NonDecomposedWorkspaceStrategy implements DecompositionWorkspaceStrategy {
    /**
     * Returns null because this strategy has no decompositions
     *
     * @param annotation
     * @param decomposedSubtypeConfig
     * @returns {null}
     */
    getDecomposedFileName(annotation: any, decomposedSubtypeConfig: any): any;
    /**
     * For non-decomposed source, the metadata file path is also the container path
     *
     * @param metadataFilePath
     * @param ext
     * @returns {any}
     */
    getContainerPath(metadataFilePath: any, ext: any): any;
    /**
     * Returns an empty map because this strategy has no decompositions
     *
     * @param metadataFilePath
     * @param ext
     * @returns {Map<DecomposedSubtypeConfig, string[]>}
     */
    findDecomposedPaths(metadataFilePath: any, ext: any): Map<DecomposedSubtypeConfig, string[]>;
    /**
     * Returns null because this strategy has no decompositions
     *
     * @param metadataFilePath
     * @param ext
     * @param decomposedSubtypeConfig
     * @returns {null}
     */
    getDecomposedSubtypeDirFromMetadataFile(metadataFilePath: any, ext: any, decomposedSubtypeConfig: any): any;
    getDecomposedSubtypeDirFromAnnotation(annotation: MetadataDocumentAnnotation, metadataType: string, aggregateFullName: string, decomposedSubtypeConfig: DecomposedSubtypeConfig): Nullable<string>;
}
