import { WorkspaceElement } from '../workspaceElement';
import { DefaultMetadataType } from './defaultMetadataType';
export declare class FolderMetadataType extends DefaultMetadataType {
    /** Return the path of the metadata file excluding the metadatatype folder. It also appends the metadata file extension : -meta.xml
     *
     * @param metadataFilePath - The full path of the metadata file including the workspace  and the metadatatype extension. eg : projectPath/force-app/main/default/reports/Parent/child.reportFolder-meta.xml
     * Returns : Parent/child-meta.xml
     */
    protected getMdapiFormattedMetadataFileName(metadataFilePath: string): string;
    /** Returns the relative path of the metadata file excluding the metatadata type folder
     *
     * @param filePath - the path to report folder including the workspace path.eg: projectPath/force-app/main/default/reports/Parent/Child.reportFolder-meta.xml
     * returns : Parent/Child
     */
    getAggregateFullNameFromFilePath(filePath: string): string;
    /** Returns the path of the folder provided for metadata conversion, eg : Users/test/projectName/path provided for MDAPI conversion.
     *
     * @param retrieveRoot
     * @param fileProperty
     */
    getRetrievedMetadataPath(fileProperty: any, retrieveRoot: string, bundleFileProperties: any): string;
    /** Returns the path of the folder excluding the metadatatype
     *
     * @param mdapiPackagePath - includes the path from the metadatype to the folder.eg : reports/ParentFolder/childFolder, returns : ParentFolder/childFolder
     */
    getAggregateFullNameFromMdapiPackagePath(mdapiPackagePath: string): string;
    static createEmptyFolder(workspaceElements: WorkspaceElement[], metadataFilePath: string, ext: string): string;
    /**
     * Returns true if a new folder type is being created; false if a folder type is being deleted or changed
     *
     * @param workspaceElements
     * @param {string} metadataFilePath
     * @returns {boolean}
     */
    private static isCreatingNewFolder;
    isFolderType(): boolean;
}
