import { DefaultMetadataType } from './defaultMetadataType';
export declare class InFolderMetadataType extends DefaultMetadataType {
    getFullNameFromFilePath(filePath: string): string;
    /** Returns the relative path of the metadata file starting after the metatadata type folder
     *
     * @param filePath
     */
    getAggregateFullNameFromFilePath(filePath: string): string;
    /** Returns the complete path of the file including the workspace path
     *
     * @param fullName
     * @param defaultSourceDir
     */
    getDefaultAggregateMetadataPath(fullName: string, defaultSourceDir: string, bundleFileProperties: any): string;
    /** Returns the source directory path till the folder of the metatdata file
     *
     * @param aggregateFullName
     * @param mdDir
     */
    protected getPathToMdapiSourceDir(aggregateFullName: string, mdDir: string): string;
    /** Returns the path of the metadata file starting from the metadata type folder.
     *
     * @param mdapiPackagePath
     */
    getAggregateFullNameFromMdapiPackagePath(mdapiPackagePath: string): string;
    getAggregateFullNameFromSourceMemberName(sourceMemberName: string): string;
    /**
     * Returns the base metadata type name for InFolder types, which is useful when matching
     * type/name pairs (e.g., from a manifest) to AggregateSourceElements.  The only non-
     * conforming InFolder type is EmailTemplate, so this is really just to support that type.
     *   Examples:
     *     Document --> Document
     *     EmailTemplate --> Email
     *     Report --> Report
     *     Dashboard --> Dashboard
     */
    getBaseTypeName(): string;
    sourceMemberFullNameCorrespondsWithWorkspaceFullName(sourceMemberFullName: string, workspaceFullName: string): boolean;
    handleSlashesForSourceMemberName(sourceMemberFullName: string): string;
}
