import { TypeDefObj } from '../typeDefObj';
import { BundleMetadataType } from './bundleMetadataType';
export declare class WaveTemplateBundleMetadataType extends BundleMetadataType {
    constructor(typeDefObj: TypeDefObj);
    getAggregateMetadataFilePathFromWorkspacePath(filePath: any): string;
    getDefaultAggregateMetadataPath(fullName: string, defaultSourceDir: string, bundleFileProperties: any): string;
    getRetrievedMetadataPath(fileProperty: any, retrieveRoot: string, bundleFileProperties: any): string;
    isDefinitionFile(filePath: any, metadataRegistry: any): boolean;
    getOriginContentPathsForSourceConvert(metadataFilePath: string, workspaceVersion: string, unsupportedMimeTypes: string[], forceIgnore: any): Promise<string[]>;
    shouldGetMetadataTranslation(): boolean;
    getWorkspaceContentFilePath(metadataFilePath: any, retrievedContentFilePath: any): string;
    protected sourceMemberFullNameConflictsWithWorkspaceFullName(sourceMemberFullName: string, workspaceFullName: string): boolean;
    trackRemoteChangeForSourceMemberName(sourceMemberName: string): boolean;
    onlyDisplayOneConflictPerAggregate(): boolean;
    getDisplayPathForLocalConflict(workspaceFilePath: string): string;
    getAggregateFullNameFromMdapiPackagePath(mdapiPackagePath: string): string;
    validateDeletedContentPath(deletedContentPath: string, contentPaths: string[], metadataRegistry: any): void;
    parseSourceMemberForMetadataRetrieve(sourceMemberName: string, sourceMemberType: string, isNameObsolete: boolean): any;
    protected getMdapiFormattedContentFileName(originContentPath: string, aggregateFullName: string): string;
}
