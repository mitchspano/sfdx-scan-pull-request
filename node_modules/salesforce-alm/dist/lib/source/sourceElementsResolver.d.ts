import { AggregateSourceElements } from './aggregateSourceElements';
import { SourceWorkspaceAdapter } from './sourceWorkspaceAdapter';
export declare class SourceElementsResolver {
    private sourceWorkSpaceAdapter;
    private org;
    private logger;
    constructor(org: any, sourceWorkSpaceAdapter: SourceWorkspaceAdapter);
    /**
     * Returns all AggregateSourceElements in the project that match entries
     * from a manifest.
     *
     * @param manifestPath - path to package.xml
     * @return {Map} aggregateSourceElements
     */
    getSourceElementsFromManifest(manifestPath: string): Promise<AggregateSourceElements>;
    /**
     * Filters all AggregateSourceElements in the project based on manifest file entries.
     *
     * @param typeNamePairs - type name pairs from a manifest file
     * @param sourceElements - all AggregateSourceElements in the project
     * @return {Map} aggregateSoureElements
     */
    private parseTypeNamePairs;
    /**
     *
     * @param options - any{}
     * @param aggregateSourceElements - any empty array of type aggregateSoureElements
     * @param tmpOutputDir
     */
    getSourceElementsFromMetadata(options: any, aggregateSourceElements: AggregateSourceElements, tmpOutputDir?: string): Promise<AggregateSourceElements>;
}
