/**
 * Manages access to a key value store in the global .sfdx folder under <fileStoreName>.
 *
 * All key value pairs are stored under a group.
 *
 */
export declare class FileKeyValueStore {
    private fileStoreName;
    constructor(fileName: string);
    /**
     * Set a group of aliases in a bulk save.
     *
     * @param {array} keyAndValues An object representing the aliases to set.
     * @param {string} group The group the alias belongs to.
     * @returns {Promise<object>} The new aliases that were saved.
     */
    setValues(newAliases: any, group?: string): Promise<any>;
    /**
     * Delete an alias from a group
     *
     * @param {string} alias The name of the alias to delete
     * @param {string} group The group the alias belongs to. Defaults to Orgs
     * @returns {Promise} The promise resolved when the alias is deleted
     */
    delete(alias: string, group?: string): Promise<any>;
    /**
     * Set an alias on a group
     *
     * @param {string} alias The name of the alias to set
     * @param {string} property The value of the alias
     * @param {string} group The group the alias belongs to. Defaults to Orgs
     * @returns {Promise} The promise resolved when the alias is set
     */
    set(alias: string, property: string | number, group?: string): Promise<any>;
    /**
     * Unset one or more aliases on a group
     *
     * @param {string[]} aliases The names of the aliases to unset
     * @param {string} group The group the alias belongs to. Defaults to Orgs
     * @returns {Promise} The promise resolved when the aliases are unset
     */
    unset(aliasesToUnset: string[], group?: string): Promise<any>;
    /**
     * Get an alias from a group
     *
     * @param {string} alias The name of the alias to get
     * @param {string} group The group the alias belongs to. Defaults to Orgs
     * @returns {Promise} The promise resolved when the alias is retrieved
     */
    get(alias: string, group?: string): Promise<any>;
    /**
     * Get all alias from a group
     *
     * @param {string} group The group of aliases to retrieve. Defaults to Orgs
     * @returns {Promise} The promise resolved when the aliases are retrieved
     */
    list(group?: string): Promise<any>;
    /**
     * Get an alias from a group by value
     *
     * @param {string} value The value of the alias to match
     * @param {string} group The group the alias belongs to. Defaults to Orgs
     * @returns {Promise} The promise resolved when the alias is retrieved
     */
    byValue(value: string | number, group?: string): Promise<any>;
}
