import { _Promise } from 'bluebird';
/**
 * Simple enum so the error processors can returns something that indicates the check
 * completed and no problems were found.
 */
export declare enum CheckStatus {
    OK = 0
}
/**
 * Returns an array of processors used to determine if an error can be further refined. Instead of
 * adding more error handing logic to index.js add it here, as it's much easier to unit test.
 *
 * @param appConfig - the sfdx configuration
 * @param context - the cli context
 * @param err - a potentially course grained error thrown by the cli.
 */
export declare function getProcessors(appConfig: any, context: any, err: any): _Promise[];
/**
 * Check is there is an invalid grant with oauth or a 404 response from the server.
 *
 * @param appConfig - sfdx configuration
 * @param context - cli context
 * @param err - an error from the cli
 */
export declare function checkOauthAnd404(appConfig: any, context: any, err: any): CheckStatus;
/**
 * Check that the servers api version is <= to the local config apiVersion.
 *
 * @param context - the cli context that contains an org
 * @param _err  - an error thrown by the cli
 */
export declare function checkVersionMisMatchAsync(context: any, _err: any): Promise<CheckStatus>;
/**
 * Check to see if the throw error is a server 500. THis error is critical. If a database is being update in production
 * This error is throw after a rest style connection. It's imperative that customer's get a link to http://trust.salesforce.com
 *
 * @param _err - an error to process thrown by the cli.
 */
export declare function checkServer500(_err: any): CheckStatus;
export declare function checkInvalidLoginUrlWithAccessToken(context: any, err: any): CheckStatus;
