{"version":"54.6.3","commands":{"force:org:create":{"id":"force:org:create","description":"create a scratch or sandbox org\n\nSpecify a configuration file or provide key=value pairs while creating a scratch org or a sandbox. When creating scratch orgs, —targetdevhubusername (-v) must be a Dev Hub org. When creating sandboxes, the --targetusername (-u) must be a production org with sandbox licenses. The —type (-t) is required if creating a sandbox.\n\nExamples:\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a MyScratchOrg\n   $ sfdx force:org:create edition=Developer -a MyScratchOrg -s -v devHub\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a ScratchOrgWithOverrides username=testuser1@mycompany.org\n   $ sfdx force:org:create -t sandbox -f config/dev-sandbox-def.json -a MyDevSandbox -u prodOrg","strict":true,"usage":"<%= command.id %> [name=value...] [-t scratch|sandbox] [-f <filepath>] [-n] [-c] [-i <string>] [-s] [-a <string>] [-w <minutes>] [-d <integer>] [-v <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"type":{"name":"type","type":"option","char":"t","description":"type of org to create","helpValue":"(scratch|sandbox)","multiple":false,"options":["scratch","sandbox"],"default":"scratch"},"definitionfile":{"name":"definitionfile","type":"option","char":"f","description":"path to an org definition file","multiple":false},"definitionjson":{"name":"definitionjson","type":"option","char":"j","description":"org definition in JSON format","hidden":true,"multiple":false},"nonamespace":{"name":"nonamespace","type":"boolean","char":"n","description":"create the scratch org with no namespace","allowNo":false},"noancestors":{"name":"noancestors","type":"boolean","char":"c","description":"do not include second-generation package ancestors in the scratch org","allowNo":false},"clientid":{"name":"clientid","type":"option","char":"i","description":"connected app consumer key; not supported for sandbox org creation","multiple":false},"setdefaultusername":{"name":"setdefaultusername","type":"boolean","char":"s","description":"set the created org as the default username","allowNo":false},"setalias":{"name":"setalias","type":"option","char":"a","description":"alias for the created org","multiple":false},"env":{"name":"env","type":"option","char":"e","description":"environment where the scratch org is created: sandbox*,virtual,prototype","hidden":true,"helpValue":"(sandbox*|virtual|prototype)","multiple":false,"options":["sandbox*","virtual","prototype"],"default":"sandbox"},"wait":{"name":"wait","type":"option","char":"w","description":"the streaming client socket timeout (in minutes)","multiple":false,"default":{"quantity":6,"unit":0}},"durationdays":{"name":"durationdays","type":"option","char":"d","description":"duration of the scratch org (in days) (default:7, min:1, max:30)","multiple":false},"retry":{"name":"retry","type":"option","description":"Number of scratch org auth retries after scratch org is successfully signed up.","hidden":true,"multiple":false,"default":0}},"args":[],"help":"Specify a configuration file or provide key=value pairs while creating a scratch org or a sandbox. When creating scratch orgs, —targetdevhubusername (-v) must be a Dev Hub org. When creating sandboxes, the --targetusername (-u) must be a production org with sandbox licenses. The —type (-t) is required if creating a sandbox.\n\nExamples:\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a MyScratchOrg\n   $ sfdx force:org:create edition=Developer -a MyScratchOrg -s -v devHub\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a ScratchOrgWithOverrides username=testuser1@mycompany.org\n   $ sfdx force:org:create -t sandbox -f config/dev-sandbox-def.json -a MyDevSandbox -u prodOrg","showProgress":true,"supportsDevhubUsername":true,"supportsUsername":true,"varargs":true,"orgType":"defaultdevhubusername","flagsConfig":{"type":{"kind":"enum","helpValue":"(scratch|sandbox)","char":"t","description":"type of org to create","options":["scratch","sandbox"],"default":"scratch","input":[],"multiple":false,"type":"option"},"definitionfile":{"kind":"filepath","char":"f","description":"path to an org definition file","input":[],"multiple":false,"type":"option"},"definitionjson":{"kind":"string","char":"j","description":"org definition in JSON format","hidden":true,"input":[],"multiple":false,"type":"option"},"nonamespace":{"kind":"boolean","char":"n","description":"create the scratch org with no namespace","allowNo":false,"type":"boolean"},"noancestors":{"kind":"boolean","char":"c","description":"do not include second-generation package ancestors in the scratch org","allowNo":false,"type":"boolean"},"clientid":{"kind":"string","char":"i","description":"connected app consumer key; not supported for sandbox org creation","input":[],"multiple":false,"type":"option"},"setdefaultusername":{"kind":"boolean","char":"s","description":"set the created org as the default username","allowNo":false,"type":"boolean"},"setalias":{"kind":"string","char":"a","description":"alias for the created org","input":[],"multiple":false,"type":"option"},"env":{"kind":"enum","helpValue":"(sandbox*|virtual|prototype)","char":"e","description":"environment where the scratch org is created: sandbox*,virtual,prototype","hidden":true,"options":["sandbox*","virtual","prototype"],"default":"sandbox","input":[],"multiple":false,"type":"option"},"wait":{"kind":"minutes","char":"w","description":"the streaming client socket timeout (in minutes)","min":2,"default":{"quantity":6,"unit":0},"input":[],"multiple":false,"type":"option"},"durationdays":{"kind":"integer","char":"d","description":"duration of the scratch org (in days) (default:7, min:1, max:30)","min":1,"max":30,"input":[],"multiple":false,"type":"option"},"retry":{"kind":"number","hidden":true,"default":0,"max":10,"description":"Number of scratch org auth retries after scratch org is successfully signed up.","input":[],"multiple":false,"type":"option"}}},"force:package:convert":{"id":"force:package:convert","description":"creates a second-generation package version from a first-generation package\n\nThe package convert creates a new package in the Dev Hub if one does not already exist for the specified first-generation package.\n\nIt then creates a new package version in the Dev Hub with contents based on the specified first-generation package.\n\nThe latest released non-patch package version from the specified first-generation package will be converted.\n\nTo retrieve details about a package version create request, including status and package version ID (04t), run \"sfdx force:package:version:create:report -i 08c...\".\n\nWe recommend specifying the --installationkey to protect the contents of your package and to prevent unauthorized installation of your package.\n\nTo list package version creation requests in the org, run \"sfdx force:package:version:create:list\".\n\nExamples:\n   $ sfdx force:package:convert --package 033xx0000004Gmn -k password123","strict":true,"usage":"<%= command.id %> -p <string> [-k <string>] [-x] [-w <minutes>] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","hidden":true,"aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 033) of the first-generation package to convert","required":true,"multiple":false},"installationkey":{"name":"installationkey","type":"option","char":"k","description":"installation key for key-protected package (either --installationkey or --installationkeybypass is required)","required":false,"multiple":false},"installationkeybypass":{"name":"installationkeybypass","type":"boolean","char":"x","description":"bypass the installation key requirement (either --installationkey or --installationkeybypass is required)","required":false,"allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"minutes to wait for the package version to be created","required":false,"multiple":false,"default":{"quantity":0,"unit":0}},"buildinstance":{"name":"buildinstance","type":"option","char":"s","description":"the instance where the conversion package version will be created——for example, NA50","hidden":true,"required":false,"multiple":false}},"args":[],"theDescription":"creates a second-generation package version from a first-generation package","longDescription":"Creates a second-generation package in the Dev Hub from a first-generation package in the Dev Hub org.","help":"The package convert creates a new package in the Dev Hub if one does not already exist for the specified first-generation package.\n\nIt then creates a new package version in the Dev Hub with contents based on the specified first-generation package.\n\nThe latest released non-patch package version from the specified first-generation package will be converted.\n\nTo retrieve details about a package version create request, including status and package version ID (04t), run \"sfdx force:package:version:create:report -i 08c...\".\n\nWe recommend specifying the --installationkey to protect the contents of your package and to prevent unauthorized installation of your package.\n\nTo list package version creation requests in the org, run \"sfdx force:package:version:create:list\".\n\nExamples:\n   $ sfdx force:package:convert --package 033xx0000004Gmn -k password123","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":false,"flagsConfig":{"package":{"kind":"string","char":"p","description":"ID (starts with 033) of the first-generation package to convert","longDescription":"The ID (starts with 033) or alias of the package to convert.","required":true,"input":[],"multiple":false,"type":"option"},"installationkey":{"kind":"string","char":"k","description":"installation key for key-protected package (either --installationkey or --installationkeybypass is required)","longDescription":"Installation key for creating the key-protected package. Either an --installationkey value or the --installationkeybypass flag is required.","required":false,"input":[],"multiple":false,"type":"option"},"installationkeybypass":{"kind":"boolean","char":"x","description":"bypass the installation key requirement (either --installationkey or --installationkeybypass is required)","longDescription":"Bypasses the installation key requirement. If you bypass this requirement, anyone can install your package. Either an --installationkey value or the --installationkeybypass flag is required.","required":false,"allowNo":false,"type":"boolean"},"wait":{"kind":"minutes","char":"w","description":"minutes to wait for the package version to be created","longDescription":"The number of minutes to wait for the package version to be created.","required":false,"default":{"quantity":0,"unit":0},"input":[],"multiple":false,"type":"option"},"buildinstance":{"kind":"string","char":"s","description":"the instance where the conversion package version will be created——for example, NA50","longDescription":"The instance where the conversion package version will be created——for example, NA50.","required":false,"hidden":true,"input":[],"multiple":false,"type":"option"}}},"force:package:create":{"id":"force:package:create","description":"create a package\n\nNOTE: This command must be run from within a project.\n\nFirst, use this command to create a package. Then create a package version.\n\nIf you don’t have a namespace defined in your sfdx-project.json file, use --nonamespace.\n\nYour --name value must be unique within your namespace.\n\nExamples:\n   $ sfdx force:package:create -n YourPackageName -t Unlocked -r force-app\n   $ sfdx force:package:create -n YourPackageName -d \"Your Package Descripton\" -t Unlocked -r force-app\n\nRun 'sfdx force:package:list' to list all packages in the Dev Hub org.","strict":true,"usage":"<%= command.id %> -n <string> -t Managed|Unlocked -r <directory> [-d <string>] [-e] [--orgdependent] [-o <string>] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"name":{"name":"name","type":"option","char":"n","description":"package name","required":true,"multiple":false},"packagetype":{"name":"packagetype","type":"option","char":"t","description":"package type","required":true,"helpValue":"(Managed|Unlocked)","multiple":false,"options":["Managed","Unlocked"]},"description":{"name":"description","type":"option","char":"d","description":"package description","required":false,"multiple":false},"nonamespace":{"name":"nonamespace","type":"boolean","char":"e","description":"creates the package with no namespace; available only for unlocked packages.","required":false,"allowNo":false},"path":{"name":"path","type":"option","char":"r","description":"path to directory that contains the contents of the package","required":true,"multiple":false},"orgdependent":{"name":"orgdependent","type":"boolean","description":"depends on unpackaged metadata in the installation org. Applies to unlocked packages only.","required":false,"allowNo":false},"errornotificationusername":{"name":"errornotificationusername","type":"option","char":"o","description":"active Dev Hub user designated to receive email notifications for package errors","required":false,"multiple":false}},"args":[],"theDescription":"create a package","longDescription":"Creates a package.","help":"First, use this command to create a package. Then create a package version.\n\nIf you don’t have a namespace defined in your sfdx-project.json file, use --nonamespace.\n\nYour --name value must be unique within your namespace.\n\nExamples:\n   $ sfdx force:package:create -n YourPackageName -t Unlocked -r force-app\n   $ sfdx force:package:create -n YourPackageName -d \"Your Package Descripton\" -t Unlocked -r force-app\n\nRun 'sfdx force:package:list' to list all packages in the Dev Hub org.","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"name":{"kind":"string","char":"n","description":"package name","longDescription":"Name of the package to create.","required":true,"input":[],"multiple":false,"type":"option"},"packagetype":{"kind":"enum","helpValue":"(Managed|Unlocked)","char":"t","description":"package type","longDescription":"Package type for the package.\nThe options for package type are Managed and Unlocked (Managed=DeveloperManagedSubscriberManaged, Unlocked=DeveloperControlledSubscriberEditable).\nThese options determine upgrade and editability rules.","required":true,"options":["Managed","Unlocked"],"input":[],"multiple":false,"type":"option"},"description":{"kind":"string","char":"d","description":"package description","longDescription":"Description of the package.","required":false,"input":[],"multiple":false,"type":"option"},"nonamespace":{"kind":"boolean","char":"e","description":"creates the package with no namespace; available only for unlocked packages.","longDescription":"Creates the package with no namespace. Available only for unlocked packages. Useful when you’re migrating an existing org to packages. But, use a namespaced package for new metadata.","required":false,"allowNo":false,"type":"boolean"},"path":{"kind":"directory","char":"r","description":"path to directory that contains the contents of the package","longDescription":"The path to the directory that contains the contents of the package.","required":true,"input":[],"multiple":false,"type":"option"},"orgdependent":{"kind":"boolean","description":"depends on unpackaged metadata in the installation org. Applies to unlocked packages only.","longDescription":"Package depends on unpackaged metadata in the installation org. Applies to unlocked packages only.\nUse Source Tracking in Sandboxes to develop your org-dependent unlocked package.\nFor more information, see \"Create Org-Dependent Unlocked Packages\" in the Salesforce DX Developer Guide.","required":false,"allowNo":false,"type":"boolean"},"errornotificationusername":{"kind":"string","char":"o","description":"active Dev Hub user designated to receive email notifications for package errors","longDescription":"An active Dev Hub org user designated to receive email notifications for unhandled Apex exceptions, and install, upgrade, or uninstall failures associated with your package.","required":false,"input":[],"multiple":false,"type":"option"}}},"force:package:delete":{"id":"force:package:delete","description":"delete a package\n\nNOTE: This command must be run from within a project.\n\nSpecify the ID or alias of the package you want to delete.\n\nExamples:\n   $ sfdx force:package:delete -p \"Your Package Alias\"\n   $ sfdx force:package:delete -p 0Ho...","strict":true,"usage":"<%= command.id %> -p <string> [-n] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"noprompt":{"name":"noprompt","type":"boolean","char":"n","description":"don’t prompt before deleting the package","required":false,"allowNo":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 0Ho) or alias of the package to delete","required":true,"multiple":false},"undelete":{"name":"undelete","type":"boolean","description":"undelete a deleted package","hidden":true,"required":false,"allowNo":false}},"args":[],"theDescription":"delete a package","longDescription":"Delete unlocked and second-generation managed packages. Before you delete a package, first delete all associated package versions.","help":"Specify the ID or alias of the package you want to delete.\n\nExamples:\n   $ sfdx force:package:delete -p \"Your Package Alias\"\n   $ sfdx force:package:delete -p 0Ho...","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"noprompt":{"kind":"boolean","char":"n","description":"don’t prompt before deleting the package","longDescription":"don’t prompt before deleting the package","required":false,"allowNo":false,"type":"boolean"},"package":{"kind":"string","char":"p","description":"ID (starts with 0Ho) or alias of the package to delete","longDescription":"The ID (starts with 0Ho) or alias of the package to delete.","required":true,"input":[],"multiple":false,"type":"option"},"undelete":{"kind":"boolean","description":"undelete a deleted package","longDescription":"Undelete a deleted package.","required":false,"hidden":true,"allowNo":false,"type":"boolean"}}},"force:package:install":{"id":"force:package:install","description":"install a package in the target org\n\nSupply the ID of the package version to install. The package installs in your default target org unless you supply the username for a different target org.\n\nFor package upgrades, to specify options for component deprecation or deletion of removed components, include an --upgradetype value. To delete components that can be safely deleted and deprecate the others, specify --upgradetype Mixed (the default). To deprecate all removed components, specify --upgradetype DeprecateOnly. To delete all removed components, except for custom objects and custom fields, that don't have dependencies, specify --upgradetype Delete. (Note: This option can result in the loss of data that is associated with the deleted components.) The default is Mixed.\n\nExamples:\n   $ sfdx force:package:install --package 04t... -u me@example.com\n   $ sfdx force:package:install --package awesome_package_alias\n   $ sfdx force:package:install --package \"Awesome Package Alias\"\n   $ sfdx force:package:install --package 04t... -t DeprecateOnly","strict":true,"usage":"<%= command.id %> [-w <minutes>] [-k <string>] [-b <minutes>] [-r] [-p <string>] [-a all|package] [-s AllUsers|AdminsOnly] [-t DeprecateOnly|Mixed|Delete] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"wait":{"name":"wait","type":"option","char":"w","description":"number of minutes to wait for installation status","required":false,"multiple":false},"installationkey":{"name":"installationkey","type":"option","char":"k","description":"installation key for key-protected package (default: null)","required":false,"multiple":false},"publishwait":{"name":"publishwait","type":"option","char":"b","description":"number of minutes to wait for subscriber package version ID to become available in the target org ","required":false,"multiple":false},"noprompt":{"name":"noprompt","type":"boolean","char":"r","description":"do not prompt for confirmation","required":false,"allowNo":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 04t) or alias of the package version to install","required":false,"multiple":false},"apexcompile":{"name":"apexcompile","type":"option","char":"a","description":"compile all Apex in the org and package, or only Apex in the package; unlocked packages only","required":false,"helpValue":"(all|package)","multiple":false,"options":["all","package"],"default":"all"},"securitytype":{"name":"securitytype","type":"option","char":"s","description":"security access type for the installed package (deprecation notice: The default --securitytype value will change from AllUsers to AdminsOnly in v47.0 or later.)","required":false,"helpValue":"(AllUsers|AdminsOnly)","multiple":false,"options":["AllUsers","AdminsOnly"],"default":"AdminsOnly"},"upgradetype":{"name":"upgradetype","type":"option","char":"t","description":"the upgrade type for the package installation; available only for unlocked packages","required":false,"helpValue":"(DeprecateOnly|Mixed|Delete)","multiple":false,"options":["DeprecateOnly","Mixed","Delete"],"default":"Mixed"}},"args":[],"theDescription":"install a package in the target org","longDescription":"Installs a package in the target org.","help":"Supply the ID of the package version to install. The package installs in your default target org unless you supply the username for a different target org.\n\nFor package upgrades, to specify options for component deprecation or deletion of removed components, include an --upgradetype value. To delete components that can be safely deleted and deprecate the others, specify --upgradetype Mixed (the default). To deprecate all removed components, specify --upgradetype DeprecateOnly. To delete all removed components, except for custom objects and custom fields, that don't have dependencies, specify --upgradetype Delete. (Note: This option can result in the loss of data that is associated with the deleted components.) The default is Mixed.\n\nExamples:\n   $ sfdx force:package:install --package 04t... -u me@example.com\n   $ sfdx force:package:install --package awesome_package_alias\n   $ sfdx force:package:install --package \"Awesome Package Alias\"\n   $ sfdx force:package:install --package 04t... -t DeprecateOnly","requiresProject":false,"requiresUsername":true,"flagsConfig":{"wait":{"kind":"minutes","char":"w","description":"number of minutes to wait for installation status","longDescription":"Maximum number of minutes to wait for installation status. The default is 0.","required":false,"input":[],"multiple":false,"type":"option"},"installationkey":{"kind":"string","char":"k","description":"installation key for key-protected package (default: null)","longDescription":"Installation key for installing a key-protected package. The default is null.","required":false,"input":[],"multiple":false,"type":"option"},"publishwait":{"kind":"minutes","char":"b","description":"number of minutes to wait for subscriber package version ID to become available in the target org ","longDescription":"Maximum number of minutes to wait for the Subscriber Package Version ID to become available in the target org before canceling the install request. The default is 0.","required":false,"input":[],"multiple":false,"type":"option"},"noprompt":{"kind":"boolean","char":"r","description":"do not prompt for confirmation","longDescription":"Allows the following without an explicit confirmation response: 1) Remote Site Settings and Content Security Policy websites to send or receive data, and 2) --upgradetype Delete to proceed.","required":false,"allowNo":false,"type":"boolean"},"package":{"kind":"string","char":"p","description":"ID (starts with 04t) or alias of the package version to install","longDescription":"The ID (starts with 04t) or alias of the package version to install.","required":false,"input":[],"multiple":false,"type":"option"},"apexcompile":{"kind":"enum","helpValue":"(all|package)","char":"a","description":"compile all Apex in the org and package, or only Apex in the package; unlocked packages only","longDescription":"Applies to unlocked packages only. Specifies whether to compile all Apex in the org and package, or only the Apex in the package.\nFor package installs into production orgs, or any org that has Apex Compile on Deploy enabled, the platform compiles all Apex in the org after the package install or upgrade operation completes.\nThis approach assures that package installs and upgrades don’t impact the performance of an org, and is done even if --apexcompile package is specified.","required":false,"default":"all","options":["all","package"],"input":[],"multiple":false,"type":"option"},"securitytype":{"kind":"enum","helpValue":"(AllUsers|AdminsOnly)","char":"s","description":"security access type for the installed package (deprecation notice: The default --securitytype value will change from AllUsers to AdminsOnly in v47.0 or later.)","longDescription":"Security access type for the installed package.\nDeprecation notice: The --securitytype parameter's default value will change from AllUsers to AdminsOnly in an upcoming release (v47.0 or later).","required":false,"default":"AdminsOnly","options":["AllUsers","AdminsOnly"],"input":[],"multiple":false,"type":"option"},"upgradetype":{"kind":"enum","helpValue":"(DeprecateOnly|Mixed|Delete)","char":"t","description":"the upgrade type for the package installation; available only for unlocked packages","longDescription":"For package upgrades, specifies whether to mark all removed components as deprecated (DeprecateOnly), to delete removed components that can be safely deleted and deprecate the others (Mixed), or to delete all removed components, except for custom objects and custom fields, that don't have dependencies (Delete). The default is Mixed. Can specify DeprecateOnly or Delete only for unlocked package upgrades.","required":false,"default":"Mixed","options":["DeprecateOnly","Mixed","Delete"],"input":[],"multiple":false,"type":"option"}}},"force:package:list":{"id":"force:package:list","description":"list all packages in the Dev Hub org\n\nYou can view the namespace, IDs, and other details for each package.\n\nExamples:\n   $ sfdx force:package:list -v devhub@example.com\n   $ sfdx force:package:list -v devhub@example.com --verbose","strict":true,"usage":"<%= command.id %> [-v <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"verbose":{"name":"verbose","type":"boolean","description":"display extended package detail","allowNo":false}},"args":[],"theDescription":"list all packages in the Dev Hub org","longDescription":"Lists all packages in the Dev Hub org.","help":"You can view the namespace, IDs, and other details for each package.\n\nExamples:\n   $ sfdx force:package:list -v devhub@example.com\n   $ sfdx force:package:list -v devhub@example.com --verbose","requiresProject":false,"orgType":"defaultdevhubusername","requiresDevhubUsername":true,"flagsConfig":{"verbose":{"description":"display extended package detail","longDescription":"Displays extended package details.","type":"boolean","kind":"boolean","allowNo":false}}},"force:package:uninstall":{"id":"force:package:uninstall","description":"uninstall a second-generation package from the target org\n\nSpecify the package ID for a second-generation package.\n\nExamples:\n   $ sfdx force:package:uninstall -p 04t... -u me@example.com\n   $ sfdx force:package:uninstall -p undesirable_package_alias\n   $ sfdx force:package:uninstall -p \"Undesirable Package Alias\"\n\nTo list the org’s installed packages, run \"sfdx force:package:installed:list\".\n\nTo uninstall a first-generation package, from Setup, enter Installed Packages in the Quick Find box, then select Installed Packages.","strict":true,"usage":"<%= command.id %> [-w <minutes>] [-p <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"wait":{"name":"wait","type":"option","char":"w","description":"number of minutes to wait for uninstall status","required":false,"multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 04t) or alias of the package version to uninstall","required":false,"multiple":false}},"args":[],"theDescription":"uninstall a second-generation package from the target org","longDescription":"Uninstalls a second-generation package from the target org. To uninstall a first-generation package, use the Salesforce user interface.","help":"Specify the package ID for a second-generation package.\n\nExamples:\n   $ sfdx force:package:uninstall -p 04t... -u me@example.com\n   $ sfdx force:package:uninstall -p undesirable_package_alias\n   $ sfdx force:package:uninstall -p \"Undesirable Package Alias\"\n\nTo list the org’s installed packages, run \"sfdx force:package:installed:list\".\n\nTo uninstall a first-generation package, from Setup, enter Installed Packages in the Quick Find box, then select Installed Packages.","requiresProject":false,"orgType":"defaultusername","requiresUsername":true,"flagsConfig":{"wait":{"kind":"minutes","char":"w","description":"number of minutes to wait for uninstall status","longDescription":"Maximum number of minutes to wait for uninstall status. The default is 0.","required":false,"input":[],"multiple":false,"type":"option"},"package":{"kind":"string","char":"p","description":"ID (starts with 04t) or alias of the package version to uninstall","longDescription":"The ID (starts with 04t) or alias of the package version to uninstall.","required":false,"input":[],"multiple":false,"type":"option"}}},"force:package:update":{"id":"force:package:update","description":"update package details\n\nNOTE: This command must be run from within a project.\n\nSpecify a new value for each option you want to update.\n\nExamples:\n   $ sfdx force:package:update -p \"Your Package Alias\" -n \"New Package Name\"\n   $ sfdx force:package:update -p 0Ho... -d \"New Package Description\"\n\nRun \"sfdx force:package:list\" to list all packages in the Dev Hub org.","strict":true,"usage":"<%= command.id %> -p <string> [-n <string>] [-d <string>] [-o <string>] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 0Ho) or alias of the package to update","required":true,"multiple":false},"name":{"name":"name","type":"option","char":"n","description":"new package name","required":false,"multiple":false},"description":{"name":"description","type":"option","char":"d","description":"new package description","required":false,"multiple":false},"errornotificationusername":{"name":"errornotificationusername","type":"option","char":"o","description":"active Dev Hub user designated to receive email notifications for package errors","required":false,"multiple":false}},"args":[],"theDescription":"update package details","longDescription":"Updates details about a package. Does not create a package version.","help":"Specify a new value for each option you want to update.\n\nExamples:\n   $ sfdx force:package:update -p \"Your Package Alias\" -n \"New Package Name\"\n   $ sfdx force:package:update -p 0Ho... -d \"New Package Description\"\n\nRun \"sfdx force:package:list\" to list all packages in the Dev Hub org.","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"package":{"kind":"string","char":"p","description":"ID (starts with 0Ho) or alias of the package to update","longDescription":"The ID (starts with 0Ho) or alias of the package to update.","required":true,"input":[],"multiple":false,"type":"option"},"name":{"kind":"string","char":"n","description":"new package name","longDescription":"New name of the package.","required":false,"input":[],"multiple":false,"type":"option"},"description":{"kind":"string","char":"d","description":"new package description","longDescription":"New description of the package.","required":false,"input":[],"multiple":false,"type":"option"},"errornotificationusername":{"kind":"string","char":"o","description":"active Dev Hub user designated to receive email notifications for package errors","longDescription":"An active Dev Hub org user designated to receive email notifications for unhandled Apex exceptions, and install, upgrade, or uninstall failures associated with your package.","required":false,"input":[],"multiple":false,"type":"option"}}},"force:mdapi:legacy:convert":{"id":"force:mdapi:legacy:convert","description":"(deprecated) convert metadata from the Metadata API format into the source format\n\nWARNING: The command \"force:mdapi:legacy:convert\" has been deprecated and will be removed in v56.0 or later. Use \"force:mdapi:convert\" instead.\n\nNOTE: This command must be run from within a project.\n\nTo use Salesforce CLI to work with components that you retrieved via Metadata API, first convert your files from the metadata format to the source format using \"sfdx force:mdapi:legacy:convert\".\n\nTo convert files from the source format back to the metadata format, so that you can deploy them using \"sfdx force:mdapi:legacy:deploy\", run \"sfdx force:source:convert\".\n\nExamples:\n   $ sfdx force:mdapi:legacy:convert -r path/to/metadata\n   $ sfdx force:mdapi:legacy:convert -r path/to/metadata -d path/to/outputdir","strict":true,"usage":"<%= command.id %> -r <directory> [-d <directory>] [-m <array> | -x <string> | -p <array>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"rootdir":{"name":"rootdir","type":"option","char":"r","description":"the root directory containing the Metadata API–formatted metadata","required":true,"multiple":false},"outputdir":{"name":"outputdir","type":"option","char":"d","description":"the output directory to store the source–formatted files","required":false,"multiple":false},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path to manifest (package.xml) of metadata types to convert.","required":false,"multiple":false},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names to convert","required":false,"multiple":false,"exclusive":["manifest","metadatapath"]},"metadatapath":{"name":"metadatapath","type":"option","char":"p","description":"comma-separated list of paths to the local source files to convert","hidden":false,"required":false,"multiple":false,"exclusive":["manifest","metadata"]}},"args":[],"deprecated":{"version":55,"to":"force:mdapi:convert"},"theDescription":"convert metadata from the Metadata API format into the source format","longDescription":"Converts metadata retrieved via Metadata API into the source format used in Salesforce DX projects.","help":"To use Salesforce CLI to work with components that you retrieved via Metadata API, first convert your files from the metadata format to the source format using \"sfdx force:mdapi:legacy:convert\".\n\nTo convert files from the source format back to the metadata format, so that you can deploy them using \"sfdx force:mdapi:legacy:deploy\", run \"sfdx force:source:convert\".\n\nExamples:\n   $ sfdx force:mdapi:legacy:convert -r path/to/metadata\n   $ sfdx force:mdapi:legacy:convert -r path/to/metadata -d path/to/outputdir","initializeMetadataRegistry":true,"showProgress":true,"requiresUsername":false,"requiresProject":true,"flagsConfig":{"rootdir":{"kind":"directory","char":"r","description":"the root directory containing the Metadata API–formatted metadata","longDescription":"The root directory that contains the metadata you retrieved using Metadata API.","required":true,"input":[],"multiple":false,"type":"option"},"outputdir":{"kind":"directory","char":"d","description":"the output directory to store the source–formatted files","longDescription":"The directory to store your files in after they’re converted to the source format. Can be an absolute or relative path.","required":false,"input":[],"multiple":false,"type":"option"},"manifest":{"kind":"string","char":"x","description":"file path to manifest (package.xml) of metadata types to convert.","longDescription":"The complete path to the manifest (package.xml) file that specifies the metadata types to convert.\nIf you specify this parameter, don’t specify --metadata or --sourcepath.","required":false,"input":[],"multiple":false,"type":"option"},"metadata":{"kind":"array","char":"m","description":"comma-separated list of metadata component names to convert","longDescription":"A comma-separated list of metadata component names to convert.","required":false,"exclusive":["manifest","metadatapath"],"input":[],"multiple":false,"type":"option"},"metadatapath":{"kind":"array","char":"p","required":false,"hidden":false,"description":"comma-separated list of paths to the local source files to convert","longDescription":"A comma-separated list of paths to the local source files to convert. The supplied paths can be to a single file (in which case the operation is applied to only one file) or to a folder (in which case the operation is applied to all metadata types in the directory and its sub-directories).\nIf you specify this parameter, don’t specify --manifest or --metadata.If the comma-separated list you’re supplying contains spaces, enclose the entire comma-separated list in one set of double quotes.","exclusive":["manifest","metadata"],"input":[],"multiple":false,"type":"option"}}},"force:mdapi:legacy:deploy":{"id":"force:mdapi:legacy:deploy","description":"(deprecated) deploy metadata to an org using Metadata API\n\nWARNING: The command \"force:mdapi:legacy:deploy\" has been deprecated and will be removed in v56.0 or later. Use \"force:mdapi:deploy\" instead.\n\nIMPORTANT: Where possible, we changed noninclusive terms to align with our company value of Equality. We maintained certain terms to avoid any effect on customer implementations.\n\nSpecify the location of the files to deploy as a .zip file or by the root of the directory tree containing the files. To check the status of a deployment, specify its job ID. To run quick deploy of a recently validated package, use --validateddeployrequestid with the validated ID.\n\nTo wait for the command to finish running no matter how long the deployment takes, set --wait to -1: \"sfdx force mdapi:deploy -w -1 ...\".\n\nIf you don’t specify --wait, the command returns immediately and the metadata deploys asynchronously. Run force:mdapi:legacy: deploy:report to check the status of the deploy.","strict":true,"usage":"<%= command.id %> [-c] [-d <directory> | -f <filepath>] [-w <minutes>] [-l NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg] [-r <array>] [-o] [-g] [-q <id>] [-s] [--soapdeploy] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"checkonly":{"name":"checkonly","type":"boolean","char":"c","description":"validate deploy but don’t save to the org","required":false,"allowNo":false},"deploydir":{"name":"deploydir","type":"option","char":"d","description":"root of directory tree of files to deploy","required":false,"multiple":false,"exclusive":["zipfile"]},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: 0)","required":false,"multiple":false},"testlevel":{"name":"testlevel","type":"option","char":"l","description":"deployment testing level","required":false,"helpValue":"(NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg)","multiple":false,"options":["NoTestRun","RunSpecifiedTests","RunLocalTests","RunAllTestsInOrg"]},"runtests":{"name":"runtests","type":"option","char":"r","description":"tests to run if --testlevel RunSpecifiedTests","required":false,"multiple":false},"ignoreerrors":{"name":"ignoreerrors","type":"boolean","char":"o","description":"ignore any errors and do not roll back deployment","required":false,"allowNo":false},"ignorewarnings":{"name":"ignorewarnings","type":"boolean","char":"g","description":"whether a warning will allow a deployment to complete successfully","required":false,"allowNo":false},"validateddeployrequestid":{"name":"validateddeployrequestid","type":"option","char":"q","description":"request ID of the validated deployment to run a Quick Deploy","required":false,"multiple":false},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy results","allowNo":false},"zipfile":{"name":"zipfile","type":"option","char":"f","description":"path to .zip file of metadata to deploy","required":false,"multiple":false},"singlepackage":{"name":"singlepackage","type":"boolean","char":"s","description":"Indicates that the zip file points to a directory structure for a single package","required":false,"allowNo":false},"soapdeploy":{"name":"soapdeploy","type":"boolean","description":"deploy metadata with SOAP API instead of REST API","required":false,"allowNo":false}},"args":[],"deprecated":{"version":55,"to":"force:mdapi:deploy"},"theDescription":"deploy metadata to an org using Metadata API","longDescription":"Deploys file representations of components into an org by creating or updating the components they represent. You can deploy and retrieve up to 10,000 files or 400 MB (39 MB compressed) at one time. The default target username is the admin user for the default scratch org.","help":"IMPORTANT: Where possible, we changed noninclusive terms to align with our company value of Equality. We maintained certain terms to avoid any effect on customer implementations.\n\nSpecify the location of the files to deploy as a .zip file or by the root of the directory tree containing the files. To check the status of a deployment, specify its job ID. To run quick deploy of a recently validated package, use --validateddeployrequestid with the validated ID.\n\nTo wait for the command to finish running no matter how long the deployment takes, set --wait to -1: \"sfdx force mdapi:deploy -w -1 ...\".\n\nIf you don’t specify --wait, the command returns immediately and the metadata deploys asynchronously. Run force:mdapi:legacy: deploy:report to check the status of the deploy.","requiresProject":false,"requiresUsername":true,"flagsConfig":{"checkonly":{"kind":"boolean","char":"c","description":"validate deploy but don’t save to the org","longDescription":"Validates the deployed metadata and runs all Apex tests, but prevents the deployment from being saved to the org.\nIf you change a field type from Master-Detail to Lookup or vice versa, that change isn’t supported when using the --checkonly parameter to test a deployment (validation). This kind of change isn’t supported for test deployments to avoid the risk of data loss or corruption. If a change that isn’t supported for test deployments is included in a deployment package, the test deployment fails and issues an error.\nIf your deployment package changes a field type from Master-Detail to Lookup or vice versa, you can still validate the changes prior to deploying to Production by performing a full deployment to another test Sandbox. A full deployment includes a validation of the changes as part of the deployment process.\nNote: A Metadata API deployment that includes Master-Detail relationships deletes all detail records in the Recycle Bin in the following cases.\n1. For a deployment with a new Master-Detail field, soft delete (send to the Recycle Bin) all detail records before proceeding to deploy the Master-Detail field, or the deployment fails. During the deployment, detail records are permanently deleted from the Recycle Bin and cannot be recovered.\n2. For a deployment that converts a Lookup field relationship to a Master-Detail relationship, detail records must reference a master record or be soft-deleted (sent to the Recycle Bin) for the deployment to succeed. However, a successful deployment permanently deletes any detail records in the Recycle Bin.","required":false,"allowNo":false,"type":"boolean"},"deploydir":{"kind":"directory","char":"d","description":"root of directory tree of files to deploy","longDescription":"The root of the directory tree that contains the files to deploy. The root must contain a valid package.xml file describing the entities in the directory structure. Required to initiate a deployment if you don’t use --zipfile. If you specify both --zipfile and --deploydir, a zip file of the contents of the --deploydir directory is written to the location specified by --zipfile.","required":false,"exclusive":["zipfile"],"input":[],"multiple":false,"type":"option"},"wait":{"kind":"minutes","char":"w","description":"wait time for command to finish in minutes (default: 0)","longDescription":"The number of minutes to wait for the command to complete. The default is –1 (no limit). 0","required":false,"input":[],"multiple":false,"type":"option"},"testlevel":{"kind":"enum","helpValue":"(NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg)","char":"l","description":"deployment testing level","longDescription":"Specifies which level of deployment tests to run. Valid values are:\nNoTestRun—No tests are run. This test level applies only to deployments to development environments, such as sandbox, Developer Edition, or trial orgs. This test level is the default for development environments.\nRunSpecifiedTests—Runs only the tests that you specify in the --runtests option. Code coverage requirements differ from the default coverage requirements when using this test level. Executed tests must comprise a minimum of 75% code coverage for each class and trigger in the deployment package. This coverage is computed for each class and trigger individually and is different than the overall coverage percentage.\nRunLocalTests—All tests in your org are run, except the ones that originate from installed managed packages. This test level is the default for production deployments that include Apex classes or triggers.\nRunAllTestsInOrg—All tests in your org are run, including tests of managed packages.\nIf you don’t specify a test level, the default behavior depends on the contents of your deployment package. For more information, see “Running Tests in a Deployment” in the Metadata API Developer Guide.","required":false,"options":["NoTestRun","RunSpecifiedTests","RunLocalTests","RunAllTestsInOrg"],"input":[],"multiple":false,"type":"option"},"runtests":{"kind":"array","char":"r","description":"tests to run if --testlevel RunSpecifiedTests","longDescription":"Lists the Apex classes containing the deployment tests to run. Use this parameter when you set --testlevel to RunSpecifiedTests.","required":false,"input":[],"multiple":false,"type":"option"},"ignoreerrors":{"kind":"boolean","char":"o","description":"ignore any errors and do not roll back deployment","longDescription":"Ignores the deploy errors, and continues with the deploy operation. The default is false. Keep this parameter set to false when deploying to a production org. If set to true, components without errors are deployed, and components with errors are skipped.","required":false,"allowNo":false,"type":"boolean"},"ignorewarnings":{"kind":"boolean","char":"g","description":"whether a warning will allow a deployment to complete successfully","longDescription":"If a warning occurs and ignoreWarnings is set to true, the success field in DeployMessage is true. When ignoreWarnings is set to false, success is set to false, and the warning is treated like an error.\nThis field is available in API version 18.0 and later. Prior to version 18.0, there was no distinction between warnings and errors. All problems were treated as errors and prevented a successful deployment.","required":false,"allowNo":false,"type":"boolean"},"validateddeployrequestid":{"kind":"id","char":"q","description":"request ID of the validated deployment to run a Quick Deploy","longDescription":"Specifies the ID of a package with recently validated components to run a Quick Deploy. Deploying a validation helps you shorten your deployment time because tests aren’t rerun. If you have a recent successful validation, you can deploy the validated components without running tests. A validation doesn’t save any components in the org. You use a validation only to check the success or failure messages that you would receive with an actual deployment. To validate your components, add the -c | --checkonly flag when you run \"sfdx force:mdapi:legacy:deploy\". This flag sets the checkOnly=\"true\" parameter for your deployment. Before deploying a recent validation, ensure that the following requirements are met:\n1. The components have been validated successfully for the target environment within the last 10 days.\n2. As part of the validation, Apex tests in the target org have passed.\n3. Code coverage requirements are met.\n     - If all tests in the org or all local tests are run, overall code coverage is at least 75%, and Apex triggers have some coverage.\n     - If specific tests are run with the RunSpecifiedTests test level, each class and trigger that was deployed is covered by at least 75% individually.","required":false,"input":[],"multiple":false,"type":"option"},"verbose":{"description":"verbose output of deploy results","longDescription":"Indicates that you want verbose output from the deploy operation.","type":"boolean","kind":"boolean","allowNo":false},"zipfile":{"kind":"filepath","char":"f","description":"path to .zip file of metadata to deploy","longDescription":"The path to the .zip file of metadata files to deploy. You must indicate this option or --deploydir.If you specify both --zipfile and --deploydir, a .zip file of the contents of the deploy directory is created at the path specified for the .zip file.","required":false,"input":[],"multiple":false,"type":"option"},"singlepackage":{"kind":"boolean","char":"s","description":"Indicates that the zip file points to a directory structure for a single package","longDescription":"Indicates that the specified .zip file points to a directory structure for a single package. By default, the CLI assumes the directory is structured for a set of packages.","required":false,"allowNo":false,"type":"boolean"},"soapdeploy":{"kind":"boolean","description":"deploy metadata with SOAP API instead of REST API","longDescription":"Deploy metadata with SOAP API instead of the default REST API. Because SOAP API has a lower .ZIP file size limit (400 MB uncompressed, 39 MB compressed), Salesforce recommends REST API deployment. This flag provides backwards compatibility with API version 50.0 and earlier when deploy used SOAP API by default.","required":false,"allowNo":false,"type":"boolean"}}},"force:mdapi:legacy:retrieve":{"id":"force:mdapi:legacy:retrieve","description":"(deprecated) retrieve metadata from an org using Metadata API\n\nWARNING: The command \"force:mdapi:legacy:retrieve\" has been deprecated and will be removed in v56.0 or later. Use \"force:mdapi:retrieve\" instead.\n\nThe default target username is the admin user for the default scratch org. You can retrieve and deploy up to 10,000 files or 400 MB (39 MB compressed) at one time.","strict":true,"usage":"<%= command.id %> -r <directory> [-w <minutes>] [-k <filepath>] [-d <directory>] [-p <array>] [-s] [-u <string>] [-a <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","char":"a","description":"target API version for the retrieve","multiple":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: -1 (no limit))","required":false,"multiple":false},"retrievetargetdir":{"name":"retrievetargetdir","type":"option","char":"r","description":"directory root for the retrieved files","required":true,"multiple":false},"unpackaged":{"name":"unpackaged","type":"option","char":"k","description":"file path of manifest of components to retrieve","required":false,"multiple":false},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of retrieve result","allowNo":false},"sourcedir":{"name":"sourcedir","type":"option","char":"d","description":"source dir to use instead of the default package dir in sfdx-project.json","required":false,"multiple":false},"packagenames":{"name":"packagenames","type":"option","char":"p","description":"a comma-separated list of packages to retrieve","required":false,"multiple":false},"singlepackage":{"name":"singlepackage","type":"boolean","char":"s","description":"Indicates that the zip file points to a directory structure for a single package","required":false,"allowNo":false}},"args":[],"deprecated":{"version":55,"to":"force:mdapi:retrieve"},"theDescription":"retrieve metadata from an org using Metadata API","longDescription":"Uses Metadata API to retrieve a .zip of XML files that represent metadata from the targeted org. The default target username is the admin user for the default scratch org. You can retrieve and deploy up to 10,000 files or 400 MB (39 MB compressed) at one time.","help":"The default target username is the admin user for the default scratch org. You can retrieve and deploy up to 10,000 files or 400 MB (39 MB compressed) at one time.","requiresProject":false,"requiresUsername":true,"flagsConfig":{"apiversion":{"char":"a","description":"target API version for the retrieve","longDescription":"Use to override the default, which is the latest version supported by your CLI plug-in, with the version in your package.xml file.","type":"option","kind":"string","input":[],"multiple":false},"wait":{"kind":"minutes","char":"w","description":"wait time for command to finish in minutes (default: -1 (no limit))","longDescription":"The number of minutes to wait for the command to complete.","required":false,"input":[],"multiple":false,"type":"option"},"retrievetargetdir":{"kind":"directory","char":"r","description":"directory root for the retrieved files","longDescription":"The root of the directory structure where the retrieved .zip or metadata files are put.","required":true,"input":[],"multiple":false,"type":"option"},"unpackaged":{"kind":"filepath","char":"k","description":"file path of manifest of components to retrieve","longDescription":"The complete path for the manifest file that specifies the components to retrieve.","required":false,"input":[],"multiple":false,"type":"option"},"verbose":{"description":"verbose output of retrieve result","longDescription":"Indicates that you want verbose output from the retrieve operation.","type":"boolean","kind":"boolean","allowNo":false},"sourcedir":{"kind":"directory","char":"d","description":"source dir to use instead of the default package dir in sfdx-project.json","longDescription":"The source directory to use instead of the default package directory specified in sfdx-project.json","required":false,"input":[],"multiple":false,"type":"option"},"packagenames":{"kind":"array","char":"p","description":"a comma-separated list of packages to retrieve","longDescription":"A comma-separated list of package names to retrieve.","required":false,"input":[],"multiple":false,"type":"option"},"singlepackage":{"kind":"boolean","char":"s","description":"Indicates that the zip file points to a directory structure for a single package","longDescription":"Indicates that the specified .zip file points to a directory structure for a single package. By default, the CLI assumes the directory is structured for a set of packages.","required":false,"allowNo":false,"type":"boolean"}}},"force:package:install:report":{"id":"force:package:install:report","description":"retrieve the status of a package installation request\n\nExamples:\n   $ sfdx force:package:install:report -i 0Hf...\n   $ sfdx force:package:install:report -i 0Hf... -u me@example.com","strict":true,"usage":"<%= command.id %> -i <id> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"requestid":{"name":"requestid","type":"option","char":"i","description":"ID of the package install request you want to check","required":true,"multiple":false}},"args":[],"theDescription":"retrieve the status of a package installation request","longDescription":"Retrieves the status of a package installation request.","help":"Examples:\n   $ sfdx force:package:install:report -i 0Hf...\n   $ sfdx force:package:install:report -i 0Hf... -u me@example.com","requiresProject":false,"requiresUsername":true,"flagsConfig":{"requestid":{"kind":"id","char":"i","description":"ID of the package install request you want to check","longDescription":"The ID of the package install request you want to check.","required":true,"input":[],"multiple":false,"type":"option"}}},"force:package:installed:list":{"id":"force:package:installed:list","description":"list the org’s installed packages\n\nNOTE: This command must be run from within a project.\n\nExamples:\n   $ sfdx force:package:installed:list\n   $ sfdx force:package:installed:list -u me@example.com","strict":true,"usage":"<%= command.id %> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false}},"args":[],"theDescription":"list the org’s installed packages","longDescription":"Lists all packages installed in the target org.","help":"Examples:\n   $ sfdx force:package:installed:list\n   $ sfdx force:package:installed:list -u me@example.com","orgType":"defaultusername","requiresUsername":true,"requiresProject":true},"force:package:uninstall:report":{"id":"force:package:uninstall:report","description":"retrieve status of package uninstall request\n\nExamples:\n   $ sfdx force:package:uninstall:report -i 06y...\n   $ sfdx force:package:uninstall:report -i 06y... -u me@example.com","strict":true,"usage":"<%= command.id %> -i <id> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"requestid":{"name":"requestid","type":"option","char":"i","description":"ID of the package uninstall request you want to check","required":true,"multiple":false}},"args":[],"theDescription":"retrieve status of package uninstall request","longDescription":"Retrieves the status of a package uninstall request.","help":"Examples:\n   $ sfdx force:package:uninstall:report -i 06y...\n   $ sfdx force:package:uninstall:report -i 06y... -u me@example.com","requiresProject":false,"requiresUsername":true,"flagsConfig":{"requestid":{"kind":"id","char":"i","description":"ID of the package uninstall request you want to check","longDescription":"The ID of the package uninstall request you want to check.","required":true,"input":[],"multiple":false,"type":"option"}}},"force:package:version:create":{"id":"force:package:version:create","description":"create a package version\n\nNOTE: This command must be run from within a project.\n\nThe package version is based on the package contents in the specified directory.\n\nTo retrieve details about a package version create request, including status and package version ID (04t), run \"sfdx force:package:version:create:report -i 08c...\".\n\nWe recommend that you specify the --installationkey parameter to protect the contents of your package and to prevent unauthorized installation of your package.\n\nTo list package version creation requests in the org, run \"sfdx force:package:version:create:list\".\n\nTo promote a package version to released, you must use the --codecoverage parameter. The package must also meet the code coverage requirements. This requirement applies to both managed and unlocked packages.\n\nWe don’t calculate code coverage for org-dependent unlocked packages, or for package versions that specify --skipvalidation.\n\nExamples:\n   $ sfdx force:package:version:create -d common -k password123\n   $ sfdx force:package:version:create -p \"Your Package Alias\" -k password123\n   $ sfdx force:package:version:create -p 0Ho... -k password123\n   $ sfdx force:package:version:create -d common -k password123 --skipvalidation","strict":true,"usage":"<%= command.id %> [-p <string>] [-d <directory>] [-f <filepath>] [-b <string>] [-t <string>] [-k <string>] [-x] [-w <minutes>] [-a <string>] [-n <string>] [-e <string>] [-c] [--releasenotesurl <url>] [--postinstallurl <url>] [--postinstallscript <string>] [--uninstallscript <string>] [--skipvalidation] [--skipancestorcheck] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 0Ho) or alias of the package to create a version of","required":false,"multiple":false},"path":{"name":"path","type":"option","char":"d","description":"path to directory that contains the contents of the package","required":false,"multiple":false},"definitionfile":{"name":"definitionfile","type":"option","char":"f","description":"path to a definition file similar to scratch org definition file that contains the list of features and org preferences that the metadata of the package version depends on","required":false,"multiple":false},"branch":{"name":"branch","type":"option","char":"b","description":"the package version’s branch","required":false,"multiple":false},"tag":{"name":"tag","type":"option","char":"t","description":"the package version’s tag","required":false,"multiple":false},"installationkey":{"name":"installationkey","type":"option","char":"k","description":"installation key for key-protected package (either --installationkey or --installationkeybypass is required)","required":false,"multiple":false},"installationkeybypass":{"name":"installationkeybypass","type":"boolean","char":"x","description":"bypass the installation key requirement (either --installationkey or --installationkeybypass is required)","required":false,"allowNo":false},"preserve":{"name":"preserve","type":"boolean","char":"r","description":"temp files are preserved that would otherwise be deleted","hidden":true,"required":false,"allowNo":false},"validateschema":{"name":"validateschema","type":"boolean","char":"j","description":"sfdx-project.json is validated against JSON schema","hidden":true,"required":false,"allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"minutes to wait for the package version to be created","required":false,"multiple":false,"default":{"quantity":0,"unit":0}},"buildinstance":{"name":"buildinstance","type":"option","char":"s","description":"the instance where the package version will be created——for example, NA50","hidden":true,"required":false,"multiple":false},"versionname":{"name":"versionname","type":"option","char":"a","description":"the name of the package version to be created","required":false,"multiple":false},"versionnumber":{"name":"versionnumber","type":"option","char":"n","description":"the version number of the package version to be created","required":false,"multiple":false},"versiondescription":{"name":"versiondescription","type":"option","char":"e","description":"the description of the package version to be created","required":false,"multiple":false},"codecoverage":{"name":"codecoverage","type":"boolean","char":"c","description":"calculate the code coverage by running the packaged Apex tests","required":false,"allowNo":false},"releasenotesurl":{"name":"releasenotesurl","type":"option","description":"release notes URL","required":false,"multiple":false},"postinstallurl":{"name":"postinstallurl","type":"option","description":"post-install URL","required":false,"multiple":false},"postinstallscript":{"name":"postinstallscript","type":"option","description":"post-install script name; managed packages only","required":false,"multiple":false},"uninstallscript":{"name":"uninstallscript","type":"option","description":"uninstall script name; managed packages only","required":false,"multiple":false},"skipvalidation":{"name":"skipvalidation","type":"boolean","description":"skip validation during package version creation; you can’t promote unvalidated package versions","required":false,"allowNo":false},"skipancestorcheck":{"name":"skipancestorcheck","type":"boolean","description":"Overrides ancestry requirements.","required":false,"allowNo":false}},"args":[],"theDescription":"create a package version","longDescription":"Creates a package version in the Dev Hub org.","help":"The package version is based on the package contents in the specified directory.\n\nTo retrieve details about a package version create request, including status and package version ID (04t), run \"sfdx force:package:version:create:report -i 08c...\".\n\nWe recommend that you specify the --installationkey parameter to protect the contents of your package and to prevent unauthorized installation of your package.\n\nTo list package version creation requests in the org, run \"sfdx force:package:version:create:list\".\n\nTo promote a package version to released, you must use the --codecoverage parameter. The package must also meet the code coverage requirements. This requirement applies to both managed and unlocked packages.\n\nWe don’t calculate code coverage for org-dependent unlocked packages, or for package versions that specify --skipvalidation.\n\nExamples:\n   $ sfdx force:package:version:create -d common -k password123\n   $ sfdx force:package:version:create -p \"Your Package Alias\" -k password123\n   $ sfdx force:package:version:create -p 0Ho... -k password123\n   $ sfdx force:package:version:create -d common -k password123 --skipvalidation","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"package":{"kind":"string","char":"p","description":"ID (starts with 0Ho) or alias of the package to create a version of","longDescription":"The ID (starts with 0Ho) or alias of the package to create a version of.","required":false,"input":[],"multiple":false,"type":"option"},"path":{"kind":"directory","char":"d","description":"path to directory that contains the contents of the package","longDescription":"The path to the directory that contains the contents of the package.","required":false,"input":[],"multiple":false,"type":"option"},"definitionfile":{"kind":"filepath","char":"f","description":"path to a definition file similar to scratch org definition file that contains the list of features and org preferences that the metadata of the package version depends on","longDescription":"The path to a definition file similar to scratch org definition file that contains the list of features and org preferences that the metadata of the package version depends on.","required":false,"input":[],"multiple":false,"type":"option"},"branch":{"kind":"string","char":"b","description":"the package version’s branch","longDescription":"Name of the branch in your source control system that the package version is based on.","required":false,"input":[],"multiple":false,"type":"option"},"tag":{"kind":"string","char":"t","description":"the package version’s tag","longDescription":"The package version’s tag.","required":false,"input":[],"multiple":false,"type":"option"},"installationkey":{"kind":"string","char":"k","description":"installation key for key-protected package (either --installationkey or --installationkeybypass is required)","longDescription":"Installation key for creating the key-protected package. Either an --installationkey value or the --installationkeybypass flag is required.","required":false,"input":[],"multiple":false,"type":"option"},"installationkeybypass":{"kind":"boolean","char":"x","description":"bypass the installation key requirement (either --installationkey or --installationkeybypass is required)","longDescription":"Bypasses the installation key requirement. If you bypass this requirement, anyone can install your package. Either an --installationkey value or the --installationkeybypass flag is required.","required":false,"allowNo":false,"type":"boolean"},"preserve":{"kind":"boolean","char":"r","description":"temp files are preserved that would otherwise be deleted","longDescription":"Specifies that the temp files are preserved that would otherwise be deleted","required":false,"hidden":true,"allowNo":false,"type":"boolean"},"validateschema":{"kind":"boolean","char":"j","description":"sfdx-project.json is validated against JSON schema","longDescription":"Specifies that the sfdx-project.json file should be validated against JSON schema.","required":false,"hidden":true,"allowNo":false,"type":"boolean"},"wait":{"kind":"minutes","char":"w","description":"minutes to wait for the package version to be created","longDescription":"The number of minutes to wait for the package version to be created.","required":false,"default":{"quantity":0,"unit":0},"input":[],"multiple":false,"type":"option"},"buildinstance":{"kind":"string","char":"s","description":"the instance where the package version will be created——for example, NA50","longDescription":"The instance where the package version will be created——for example, NA50.","required":false,"hidden":true,"input":[],"multiple":false,"type":"option"},"versionname":{"kind":"string","char":"a","description":"the name of the package version to be created","longDescription":"The name of the package version to be created. Overrides the sfdx-project.json value.","required":false,"input":[],"multiple":false,"type":"option"},"versionnumber":{"kind":"string","char":"n","description":"the version number of the package version to be created","longDescription":"The version number of the package version to be created. Overrides the sfdx-project.json value.","required":false,"input":[],"multiple":false,"type":"option"},"versiondescription":{"kind":"string","char":"e","description":"the description of the package version to be created","longDescription":"The description of the package version to be created. Overrides the sfdx-project.json value.","required":false,"input":[],"multiple":false,"type":"option"},"codecoverage":{"kind":"boolean","char":"c","description":"calculate the code coverage by running the packaged Apex tests","longDescription":"Calculate and store the code coverage percentage by running the Apex tests included in this package version. Before you can promote and release a managed or unlocked package version, the Apex code must meet a minimum 75% code coverage requirement. We don’t calculate code coverage for org-dependent unlocked packages or for package versions that specify --skipvalidation.","required":false,"default":false,"allowNo":false,"type":"boolean"},"releasenotesurl":{"kind":"url","description":"release notes URL","longDescription":"The release notes URL. This link is displayed in the package installation UI to provide release notes for this package version to subscribers.","required":false,"input":[],"multiple":false,"type":"option"},"postinstallurl":{"kind":"url","description":"post-install URL","longDescription":"The post-install instructions URL. The contents of the post-installation instructions URL are displayed in the UI after installation of the package version.","required":false,"input":[],"multiple":false,"type":"option"},"postinstallscript":{"kind":"string","description":"post-install script name; managed packages only","longDescription":"Applies to managed packages only. The post-install script name. The post-install script is an Apex class within this package that is run in the installing org after installations or upgrades of this package version.","required":false,"input":[],"multiple":false,"type":"option"},"uninstallscript":{"kind":"string","description":"uninstall script name; managed packages only","longDescription":"Applies to managed packages only. The uninstall script name. The uninstall script is an Apex class within this package that is run in the installing org after uninstallations of this package.","required":false,"input":[],"multiple":false,"type":"option"},"skipvalidation":{"kind":"boolean","description":"skip validation during package version creation; you can’t promote unvalidated package versions","longDescription":"Skips validation of dependencies, package ancestors, and metadata during package version creation. Skipping validation reduces the time it takes to create a new package version, but you can promote only validated package versions. Skipping validation can suppress important errors that can surface at a later stage. You can specify skip validation or code coverage, but not both. Code coverage is calculated during validation.","required":false,"default":false,"allowNo":false,"type":"boolean"},"skipancestorcheck":{"kind":"boolean","description":"Overrides ancestry requirements.","longDescription":"Override ancestry requirements, which allows you to specify a package ancestor that isn’t the highest released package version.","required":false,"default":false,"allowNo":false,"type":"boolean"}}},"force:package:version:delete":{"id":"force:package:version:delete","description":"delete a package version\n\nNOTE: This command must be run from within a project.\n\nSpecify the ID or alias of the package version you want to delete.\n\nExamples:\n   $ sfdx force:package:version:delete -p \"Your Package Alias\"\n   $ sfdx force:package:version:delete -p 04t...","strict":true,"usage":"<%= command.id %> -p <string> [-n] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"noprompt":{"name":"noprompt","type":"boolean","char":"n","description":"don’t prompt before deleting the package version","required":false,"allowNo":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 04t) or alias of the package to update a version of","required":true,"multiple":false},"undelete":{"name":"undelete","type":"boolean","description":"undelete a deleted package version","hidden":true,"required":false,"allowNo":false}},"args":[],"theDescription":"delete a package version","longDescription":"Delete unlocked and second-generation managed package versions.","help":"Specify the ID or alias of the package version you want to delete.\n\nExamples:\n   $ sfdx force:package:version:delete -p \"Your Package Alias\"\n   $ sfdx force:package:version:delete -p 04t...","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"noprompt":{"kind":"boolean","char":"n","description":"don’t prompt before deleting the package version","longDescription":"don’t prompt before deleting the package version","required":false,"allowNo":false,"type":"boolean"},"package":{"kind":"string","char":"p","description":"ID (starts with 04t) or alias of the package to update a version of","longDescription":"The ID (starts with 04t) or alias of the package version to delete.","required":true,"input":[],"multiple":false,"type":"option"},"undelete":{"kind":"boolean","description":"undelete a deleted package version","longDescription":"Undelete a deleted package version.","required":false,"hidden":true,"allowNo":false,"type":"boolean"}}},"force:package:version:displayancestry":{"id":"force:package:version:displayancestry","description":"display the ancestry tree for a 2GP managed package version","strict":true,"usage":"<%= command.id %> -p <string> [--dotcode] [-v <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID or alias of the package (starts with 0Ho) or package version (starts with 04t) to display ancestry for","required":true,"multiple":false},"dotcode":{"name":"dotcode","type":"boolean","description":"display the ancestry tree in DOT code","allowNo":false},"verbose":{"name":"verbose","type":"boolean","description":"display both the package version ID (starts with 04t) and the version number (major.minor.patch.build) in the ancestry tree","allowNo":false}},"args":[],"longDescription":"Displays the ancestry tree for a 2GP managed package version.","help":"Examples:\n   $ sfdx force:package:version:displayancestry -p package_version_alias\n   $ sfdx force:package:version:displayancestry -p package_version_alias --dotcode\n   $ sfdx force:package:version:displayancestry -p OHo...\n   $ sfdx force:package:version:displayancestry -p 04t...","showProgress":false,"varargs":false,"orgType":"defaultdevhubusername","requiresDevhubUsername":true,"SELECT_ALL_ROOTS":"SELECT SubscriberPackageVersionId FROM Package2Version","SELECT_ROOT_INFO":"SELECT MajorVersion, MinorVersion, PatchVersion, BuildNumber FROM Package2Version","SELECT_CHILD_INFO":"SELECT SubscriberPackageVersionId, MajorVersion, MinorVersion, PatchVersion, BuildNumber FROM Package2Version","SELECT_PARENT_INFO":"SELECT AncestorId, MajorVersion, MinorVersion, PatchVersion, BuildNumber FROM Package2Version","SELECT_PACKAGE_CONTAINER_OPTIONS":"SELECT ContainerOptions FROM Package2","SELECT_PACKAGE_VERSION_CONTAINER_OPTIONS":"SELECT Package2ContainerOptions FROM SubscriberPackageVersion","flagsConfig":{"package":{"kind":"string","char":"p","description":"ID or alias of the package (starts with 0Ho) or package version (starts with 04t) to display ancestry for","longDescription":"The ID or alias of the package or package version to display ancestry for. If you specify a package ID (starts with 0Ho) or alias, the ancestor tree for every package version associated with the package ID is displayed.\nIf you specify a package version (starts with 04t) or alias, the ancestry tree of the specified package version is displayed.","required":true,"input":[],"multiple":false,"type":"option"},"dotcode":{"kind":"boolean","description":"display the ancestry tree in DOT code","longDescription":"Displays the ancestry tree in DOT code. You can use the DOT code output in graph visualization software to create tree visualizations.","allowNo":false,"type":"boolean"},"verbose":{"description":"display both the package version ID (starts with 04t) and the version number (major.minor.patch.build) in the ancestry tree","longDescription":"Displays both the package version ID (starts with 04t) and the version number (major.minor.patch.build) in the ancestry tree.","type":"boolean","kind":"boolean","allowNo":false}}},"force:package:version:list":{"id":"force:package:version:list","description":"list all package versions in the Dev Hub org\n\nDisplays details of each package version in the org.\n\nUse --concise or --verbose to display limited or additional details, respectively.\n\nAll filter parameters are applied using the AND logical operator (not OR).\n\nExamples:\n   $ sfdx force:package:version:list --verbose --createdlastdays 3 --released --orderby PatchVersion\n   $ sfdx force:package:version:list --packages 0Ho000000000000,0Ho000000000001 --released --modifiedlastdays 0\n   $ sfdx force:package:version:list --released\n   $ sfdx force:package:version:list --concise --modifiedlastdays 0\n   $ sfdx force:package:version:list --concise -c 3 -r\n   $ sfdx force:package:version:list --packages exp-mgr,exp-mgr-util --released --modifiedlastdays 0","strict":true,"usage":"<%= command.id %> [-c <number>] [-m <number>] [-p <array>] [-r] [-o <array>] [-v <string>] [--apiversion <string>] [--concise] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"createdlastdays":{"name":"createdlastdays","type":"option","char":"c","description":"created in the last specified number of days (starting at 00:00:00 of first day to now; 0 for today)","required":false,"multiple":false},"concise":{"name":"concise","type":"boolean","description":"display limited package version details","allowNo":false},"modifiedlastdays":{"name":"modifiedlastdays","type":"option","char":"m","description":"list items modified in the specified last number of days (starting at 00:00:00 of first day to now; 0 for today)","required":false,"multiple":false},"packages":{"name":"packages","type":"option","char":"p","description":"filter results on specified comma-delimited packages (aliases or 0Ho IDs)","required":false,"multiple":false},"released":{"name":"released","type":"boolean","char":"r","description":"display released versions only","required":false,"allowNo":false},"orderby":{"name":"orderby","type":"option","char":"o","description":"order by the specified package version fields","required":false,"multiple":false},"verbose":{"name":"verbose","type":"boolean","description":"display extended package version details","allowNo":false}},"args":[],"theDescription":"list all package versions in the Dev Hub org","longDescription":"Lists all package versions in the Dev Hub org.","help":"Displays details of each package version in the org.\n\nUse --concise or --verbose to display limited or additional details, respectively.\n\nAll filter parameters are applied using the AND logical operator (not OR).\n\nExamples:\n   $ sfdx force:package:version:list --verbose --createdlastdays 3 --released --orderby PatchVersion\n   $ sfdx force:package:version:list --packages 0Ho000000000000,0Ho000000000001 --released --modifiedlastdays 0\n   $ sfdx force:package:version:list --released\n   $ sfdx force:package:version:list --concise --modifiedlastdays 0\n   $ sfdx force:package:version:list --concise -c 3 -r\n   $ sfdx force:package:version:list --packages exp-mgr,exp-mgr-util --released --modifiedlastdays 0","requiresProject":false,"orgType":"defaultdevhubusername","requiresDevhubUsername":true,"flagsConfig":{"createdlastdays":{"kind":"number","char":"c","description":"created in the last specified number of days (starting at 00:00:00 of first day to now; 0 for today)","longDescription":"Filters the list based on the specified maximum number of days since the request was created (starting at 00:00:00 of first day to now; 0 for today).","required":false,"input":[],"multiple":false,"type":"option"},"concise":{"description":"display limited package version details","longDescription":"Displays limited package version details.","type":"boolean","kind":"boolean","allowNo":false},"modifiedlastdays":{"kind":"number","char":"m","description":"list items modified in the specified last number of days (starting at 00:00:00 of first day to now; 0 for today)","longDescription":"Lists the items modified in the specified last number of days, starting at 00:00:00 of first day to now. Use 0 for today.","required":false,"input":[],"multiple":false,"type":"option"},"packages":{"kind":"array","char":"p","description":"filter results on specified comma-delimited packages (aliases or 0Ho IDs)","longDescription":"Filters results on the specified comma-delimited packages (aliases or 0Ho IDs).","required":false,"input":[],"multiple":false,"type":"option"},"released":{"kind":"boolean","char":"r","description":"display released versions only","longDescription":"Displays released versions only (IsReleased=true).","required":false,"allowNo":false,"type":"boolean"},"orderby":{"kind":"array","char":"o","description":"order by the specified package version fields","longDescription":"Orders the list by the specified package version fields.","required":false,"input":[],"multiple":false,"type":"option"},"verbose":{"description":"display extended package version details","longDescription":"Displays extended package version details.","type":"boolean","kind":"boolean","allowNo":false}}},"force:package:version:promote":{"id":"force:package:version:promote","description":"promote a package version to released\n\nNOTE: This command must be run from within a project.\n\nSupply the ID or alias of the package version you want to promote. Promotes the package version to released status.\n\nExamples:\n   $ sfdx force:package:version:promote -p 04t...\n   $ sfdx force:package:version:promote -p awesome_package_alias\n   $ sfdx force:package:version:promote -p \"Awesome Package Alias\"","strict":true,"usage":"<%= command.id %> -p <string> [-n] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 04t) or alias of the package version to promote","required":true,"multiple":false},"noprompt":{"name":"noprompt","type":"boolean","char":"n","description":"no prompt to confirm setting the package version as released","required":false,"allowNo":false}},"args":[],"theDescription":"promote a package version to released","longDescription":"Promotes a package version to released status.","help":"Supply the ID or alias of the package version you want to promote. Promotes the package version to released status.\n\nExamples:\n   $ sfdx force:package:version:promote -p 04t...\n   $ sfdx force:package:version:promote -p awesome_package_alias\n   $ sfdx force:package:version:promote -p \"Awesome Package Alias\"","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"package":{"kind":"string","char":"p","description":"ID (starts with 04t) or alias of the package version to promote","longDescription":"The ID (starts with 04t) or alias of the package version to promote.","required":true,"input":[],"multiple":false,"type":"option"},"noprompt":{"kind":"boolean","char":"n","description":"no prompt to confirm setting the package version as released","longDescription":"Do not prompt to confirm setting the package version as released.","required":false,"allowNo":false,"type":"boolean"}}},"force:package:version:report":{"id":"force:package:version:report","description":"retrieve details about a package version in the Dev Hub org\n\nNOTE: This command must be run from within a project.\n\nExamples:\n   $ sfdx force:package:version:report -p 04t...\n   $ sfdx force:package:version:report -p \"Your Package Alias\"\n\nTo update package version values, run \"sfdx force:package:version:update\".","strict":true,"usage":"<%= command.id %> -p <string> [-v <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 04t) or alias of the package to retrieve details for","required":true,"multiple":false},"verbose":{"name":"verbose","type":"boolean","description":"displays extended package version details","allowNo":false}},"args":[],"theDescription":"retrieve details about a package version in the Dev Hub org","longDescription":"Retrieves details about a package version in the Dev Hub org.","help":"Examples:\n   $ sfdx force:package:version:report -p 04t...\n   $ sfdx force:package:version:report -p \"Your Package Alias\"\n\nTo update package version values, run \"sfdx force:package:version:update\".","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"package":{"kind":"string","char":"p","description":"ID (starts with 04t) or alias of the package to retrieve details for","longDescription":"The ID (starts with 04t) or alias of the package to retrieve details for.","required":true,"input":[],"multiple":false,"type":"option"},"verbose":{"description":"displays extended package version details","longDescription":"Displays extended package version details.","type":"boolean","kind":"boolean","allowNo":false}}},"force:package:version:update":{"id":"force:package:version:update","description":"update a package version\n\nNOTE: This command must be run from within a project.\n\nSpecify a new value for each option you want to update.\n\nExamples:\n   $ sfdx force:package:version:update -p \"Your Package Alias\" -k password123\n   $ sfdx force:package:version:update -p 04t... -b main -t 'Release 1.0.7'\n   $ sfdx force:package:version:update -p 04t... -e \"New Package Version Description\"\n\nTo display details about a package version, run \"sfdx force:package:version:report\".","strict":true,"usage":"<%= command.id %> -p <string> [-a <string>] [-e <string>] [-b <string>] [-t <string>] [-k <string>] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"package":{"name":"package","type":"option","char":"p","description":"ID (starts with 04t) or alias of the package to update a version of","required":true,"multiple":false},"versionname":{"name":"versionname","type":"option","char":"a","description":"new package version name","required":false,"multiple":false},"versiondescription":{"name":"versiondescription","type":"option","char":"e","description":"new package version description","required":false,"multiple":false},"branch":{"name":"branch","type":"option","char":"b","description":"new package version branch","required":false,"multiple":false},"tag":{"name":"tag","type":"option","char":"t","description":"new package version tag","required":false,"multiple":false},"installationkey":{"name":"installationkey","type":"option","char":"k","description":"new installation key for key-protected package (default: null)","required":false,"multiple":false}},"args":[],"theDescription":"update a package version","longDescription":"Updates a second-generation package version in the Dev Hub org.","help":"Specify a new value for each option you want to update.\n\nExamples:\n   $ sfdx force:package:version:update -p \"Your Package Alias\" -k password123\n   $ sfdx force:package:version:update -p 04t... -b main -t 'Release 1.0.7'\n   $ sfdx force:package:version:update -p 04t... -e \"New Package Version Description\"\n\nTo display details about a package version, run \"sfdx force:package:version:report\".","orgType":"defaultdevhubusername","requiresDevhubUsername":true,"requiresProject":true,"flagsConfig":{"package":{"kind":"string","char":"p","description":"ID (starts with 04t) or alias of the package to update a version of","longDescription":"The ID (starts with 04t) or alias of the package to update a version of.","required":true,"input":[],"multiple":false,"type":"option"},"versionname":{"kind":"string","char":"a","description":"new package version name","longDescription":"The new package version name.","required":false,"input":[],"multiple":false,"type":"option"},"versiondescription":{"kind":"string","char":"e","description":"new package version description","longDescription":"The new package version description.","required":false,"input":[],"multiple":false,"type":"option"},"branch":{"kind":"string","char":"b","description":"new package version branch","longDescription":"The new package version branch.","required":false,"input":[],"multiple":false,"type":"option"},"tag":{"kind":"string","char":"t","description":"new package version tag","longDescription":"The new package version tag.","required":false,"input":[],"multiple":false,"type":"option"},"installationkey":{"kind":"string","char":"k","description":"new installation key for key-protected package (default: null)","longDescription":"The new installation key for the key-protected package. The default is null.","required":false,"input":[],"multiple":false,"type":"option"}}},"force:package1:version:create":{"id":"force:package1:version:create","description":"create a first-generation package version in the release org\n\nNOTE: This command must be run from within a project.\n\nThe package version is based on the contents of the specified metadata package. Omit -m if you want to create an unmanaged package version.","strict":true,"usage":"<%= command.id %> -i <id> -n <string> [-d <string>] [-v <string>] [-m] [-r <url>] [-p <url>] [-k <string>] [-w <number>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"packageid":{"name":"packageid","type":"option","char":"i","description":"ID of the metadata package (starts with 033) of which you’re creating a new version","required":true,"multiple":false},"name":{"name":"name","type":"option","char":"n","description":"package version name","required":true,"multiple":false},"description":{"name":"description","type":"option","char":"d","description":"package version description","required":false,"multiple":false},"version":{"name":"version","type":"option","char":"v","description":"package version in major.minor format, for example, 3.2","required":false,"multiple":false},"managedreleased":{"name":"managedreleased","type":"boolean","char":"m","description":"create a managed package version","required":false,"allowNo":false},"releasenotesurl":{"name":"releasenotesurl","type":"option","char":"r","description":"release notes URL","required":false,"multiple":false},"postinstallurl":{"name":"postinstallurl","type":"option","char":"p","description":"post install URL","required":false,"multiple":false},"installationkey":{"name":"installationkey","type":"option","char":"k","description":"installation key for key-protected package (default: null)","required":false,"multiple":false},"wait":{"name":"wait","type":"option","char":"w","description":"minutes to wait for the package version to be created (default: 2 minutes)","required":false,"multiple":false}},"args":[],"theDescription":"create a first-generation package version in the release org","longDescription":"Creates a first-generation package version in the release org.","help":"The package version is based on the contents of the specified metadata package. Omit -m if you want to create an unmanaged package version.","requiresUsername":true,"requiresProject":true,"flagsConfig":{"packageid":{"kind":"id","char":"i","description":"ID of the metadata package (starts with 033) of which you’re creating a new version","longDescription":"ID of the metadata package (starts with 033) of which you’re creating a new version.","required":true,"input":[],"multiple":false,"type":"option"},"name":{"kind":"string","char":"n","description":"package version name","longDescription":"Package version name.","required":true,"input":[],"multiple":false,"type":"option"},"description":{"kind":"string","char":"d","description":"package version description","longDescription":"Package version description.","required":false,"input":[],"multiple":false,"type":"option"},"version":{"kind":"string","char":"v","description":"package version in major.minor format, for example, 3.2","longDescription":"Package version in major.minor format, for example, 3.2.","required":false,"input":[],"multiple":false,"type":"option"},"managedreleased":{"kind":"boolean","char":"m","description":"create a managed package version","longDescription":"Creates a managed package version. To create a beta version, don’t include this parameter.","required":false,"allowNo":false,"type":"boolean"},"releasenotesurl":{"kind":"url","char":"r","description":"release notes URL","longDescription":"The release notes URL. This link is displayed in the package installation UI to provide release notes for this package version to subscribers.","required":false,"input":[],"multiple":false,"type":"option"},"postinstallurl":{"kind":"url","char":"p","description":"post install URL","longDescription":"The post-install instructions URL. The contents of the post-installation instructions URL are displayed in the UI after installation of the package version.","required":false,"input":[],"multiple":false,"type":"option"},"installationkey":{"kind":"string","char":"k","description":"installation key for key-protected package (default: null)","longDescription":"Installation key for creating the key-protected package. The default is null.","required":false,"input":[],"multiple":false,"type":"option"},"wait":{"kind":"number","char":"w","description":"minutes to wait for the package version to be created (default: 2 minutes)","longDescription":"Minutes to wait for the package version to be created. The default is 2 minutes.","required":false,"input":[],"multiple":false,"type":"option"}}},"force:package1:version:display":{"id":"force:package1:version:display","description":"display details about a first-generation package version\n\nNOTE: This command must be run from within a project.\n\nDisplay detailed information about an individual package version, including metadata package ID, name, the release state, and build number.","strict":true,"usage":"<%= command.id %> -i <id> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"packageversionid":{"name":"packageversionid","type":"option","char":"i","description":"metadata package version ID (starts with 04t)","required":true,"multiple":false}},"args":[],"theDescription":"display details about a first-generation package version","longDescription":"Displays detailed information about an individual first-generation package version.","help":"Display detailed information about an individual package version, including metadata package ID, name, the release state, and build number.","requiresUsername":true,"requiresProject":true,"flagsConfig":{"packageversionid":{"kind":"id","char":"i","description":"metadata package version ID (starts with 04t)","longDescription":"ID (starts with 04t) of the metadata package version whose details you want to display.","required":true,"input":[],"multiple":false,"type":"option"}}},"force:package1:version:list":{"id":"force:package1:version:list","description":"list package versions for the specified first-generation package or for the org\n\nNOTE: This command must be run from within a project.\n\nIf a metadata package ID is specified, lists all versions of the specified package. Otherwise, lists all package versions for the org. For each package version, the list includes the package version ID, metadata package ID, name, version number, and release state.","strict":true,"usage":"<%= command.id %> [-i <id>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"packageid":{"name":"packageid","type":"option","char":"i","description":"metadata package ID (starts with 033)","required":false,"multiple":false}},"args":[],"theDescription":"list package versions for the specified first-generation package or for the org","longDescription":"Lists the versions for the specified package or all first-generation packages in the org.","help":"If a metadata package ID is specified, lists all versions of the specified package. Otherwise, lists all package versions for the org. For each package version, the list includes the package version ID, metadata package ID, name, version number, and release state.","supportsUsername":true,"requiresProject":true,"flagsConfig":{"packageid":{"kind":"id","char":"i","description":"metadata package ID (starts with 033)","longDescription":"Metadata package ID (starts with 033) whose package versions you want to list. If not specified, shows all versions for all packages (managed and unmanaged) in the org.","required":false,"input":[],"multiple":false,"type":"option"}}},"force:source:legacy:pull":{"id":"force:source:legacy:pull","description":"(deprecated) pull source from the scratch org to the project\n\nWARNING: The command \"force:source:legacy:pull\" has been deprecated and will be removed in v56.0 or later. Use \"force:source:pull\" instead.\n\nNOTE: This command must be run from within a project.\n\nIf the command detects a conflict, it displays the conflicts but does not complete the process. After reviewing the conflict, rerun the command with the --forceoverwrite parameter.","strict":true,"usage":"<%= command.id %> [-w <minutes>] [-f] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: 33)","required":false,"multiple":false,"default":{"quantity":33,"unit":0}},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to the project","required":false,"allowNo":false}},"args":[],"deprecated":{"version":55,"to":"force:source:pull"},"theDescription":"pull source from the scratch org to the project","longDescription":"Pulls changed source from the scratch org to your project to keep them in sync.","help":"If the command detects a conflict, it displays the conflicts but does not complete the process. After reviewing the conflict, rerun the command with the --forceoverwrite parameter.","showProgress":true,"requiresProject":true,"requiresUsername":true,"flagsConfig":{"wait":{"kind":"minutes","char":"w","description":"wait time for command to finish in minutes (default: 33)","longDescription":"The number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.","required":false,"default":{"quantity":33,"unit":0},"min":{"quantity":1,"unit":0},"input":[],"multiple":false,"type":"option"},"forceoverwrite":{"kind":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to the project","longDescription":"Runs the pull command even if conflicts exist. Changes in the scratch org overwrite changes in the project.","required":false,"allowNo":false,"type":"boolean"}}},"force:source:legacy:push":{"id":"force:source:legacy:push","description":"(deprecated) push source to a scratch org from the project\n\nWARNING: The command \"force:source:legacy:push\" has been deprecated and will be removed in v56.0 or later. Use \"force:source:push\" instead.\n\nNOTE: This command must be run from within a project.\n\nIf the command detects a conflict, it displays the conflicts but does not complete the process. After reviewing the conflict, rerun the command with the --forceoverwrite parameter.","strict":true,"usage":"<%= command.id %> [-f] [-g] [-w <minutes>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to scratch org","required":false,"allowNo":false},"ignorewarnings":{"name":"ignorewarnings","type":"boolean","char":"g","description":"deploy changes even if warnings are generated","required":false,"allowNo":false},"replacetokens":{"name":"replacetokens","type":"boolean","char":"r","description":"replace tokens in source files prior to deployment","hidden":true,"required":false,"allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: 33)","required":false,"multiple":false,"default":{"quantity":33,"unit":0}}},"args":[],"deprecated":{"version":55,"to":"force:source:push"},"theDescription":"push source to a scratch org from the project","longDescription":"Pushes changed source from your project to a scratch org to keep them in sync.","help":"If the command detects a conflict, it displays the conflicts but does not complete the process. After reviewing the conflict, rerun the command with the --forceoverwrite parameter.","showProgress":true,"requiresProject":true,"requiresUsername":true,"flagsConfig":{"forceoverwrite":{"kind":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to scratch org","longDescription":"Runs the push command even if conflicts exist. Changes in the project overwrite changes in the scratch org.","required":false,"allowNo":false,"type":"boolean"},"ignorewarnings":{"kind":"boolean","char":"g","description":"deploy changes even if warnings are generated","longDescription":"Completes the deployment even if warnings are generated.","required":false,"allowNo":false,"type":"boolean"},"replacetokens":{"kind":"boolean","char":"r","description":"replace tokens in source files prior to deployment","longDescription":"Replaces tokens in source files prior to deployment.","required":false,"hidden":true,"allowNo":false,"type":"boolean"},"wait":{"kind":"minutes","char":"w","description":"wait time for command to finish in minutes (default: 33)","longDescription":"Number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.","required":false,"default":{"quantity":33,"unit":0},"min":{"quantity":1,"unit":0},"input":[],"multiple":false,"type":"option"}}},"force:source:legacy:status":{"id":"force:source:legacy:status","description":"(deprecated) list local changes and/or changes in a scratch org\n\nWARNING: The command \"force:source:legacy:status\" has been deprecated and will be removed in v56.0 or later. Use \"force:source:status\" instead.\n\nNOTE: This command must be run from within a project.\n\nExamples:\n   $ sfdx force:source:legacy:status -l\n   $ sfdx force:source:legacy:status -r\n   $ sfdx force:source:legacy:status -a\n   $ sfdx force:source:legacy:status -a -u me@example.com --json","strict":true,"usage":"<%= command.id %> [-l] [-r] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"all":{"name":"all","type":"boolean","char":"a","description":"(deprecated) list all the changes that have been made","hidden":true,"required":false,"allowNo":false},"local":{"name":"local","type":"boolean","char":"l","description":"list the changes that have been made locally","required":false,"allowNo":false},"remote":{"name":"remote","type":"boolean","char":"r","description":"list the changes that have been made in the scratch org","required":false,"allowNo":false}},"args":[],"deprecated":{"version":55,"to":"force:source:status"},"theDescription":"list local changes and/or changes in a scratch org","longDescription":"Lists changes that have been made locally, in a scratch org, or both.","help":"Examples:\n   $ sfdx force:source:legacy:status -l\n   $ sfdx force:source:legacy:status -r\n   $ sfdx force:source:legacy:status -a\n   $ sfdx force:source:legacy:status -a -u me@example.com --json","showProgress":true,"requiresProject":true,"requiresUsername":true,"flagsConfig":{"all":{"kind":"boolean","char":"a","description":"(deprecated) list all the changes that have been made","longDescription":"Lists all the changes that have been made.","required":false,"hidden":true,"deprecated":{"version":"53.0","message":"To see both local and remote changes, use \"sfdx force:source:legacy:status\"."},"allowNo":false,"type":"boolean"},"local":{"kind":"boolean","char":"l","description":"list the changes that have been made locally","longDescription":"Lists the changes that have been made locally.","required":false,"allowNo":false,"type":"boolean"},"remote":{"kind":"boolean","char":"r","description":"list the changes that have been made in the scratch org","longDescription":"Lists the changes that have been made in the scratch org.","required":false,"allowNo":false,"type":"boolean"}}},"force:mdapi:legacy:deploy:report":{"id":"force:mdapi:legacy:deploy:report","description":"(deprecated) check the status of a metadata deployment\n\nWARNING: The command \"force:mdapi:legacy:deploy:report\" has been deprecated and will be removed in v56.0 or later. Use \"force:mdapi:deploy:report\" instead.\n\nSpecify the job ID for the deploy you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status.","strict":true,"usage":"<%= command.id %> [-w <minutes>] [-i <id>] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: 0)","required":false,"multiple":false},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the deployment to check; required if you’ve never deployed using Salesforce CLI; if not specified, defaults to your most recent CLI deployment","required":false,"multiple":false},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy results","allowNo":false}},"args":[],"deprecated":{"version":55,"to":"force:mdapi:deploy:report"},"theDescription":"check the status of a metadata deployment","longDescription":"Checks the current status of an asynchronous metadata deployment.","help":"Specify the job ID for the deploy you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status.","requiresProject":false,"requiresUsername":true,"flagsConfig":{"wait":{"kind":"minutes","char":"w","description":"wait time for command to finish in minutes (default: 0)","longDescription":"The number of minutes to wait for the command to complete. The default is –1 (no limit). 0","required":false,"input":[],"multiple":false,"type":"option"},"jobid":{"kind":"id","char":"i","description":"job ID of the deployment to check; required if you’ve never deployed using Salesforce CLI; if not specified, defaults to your most recent CLI deployment","longDescription":"The job ID (id field value for AsyncResult) of the deployment you want to check. The job ID is required if you haven’t previously deployed using Salesforce CLI. If you deploy using Salesforce CLI and don’t specify a job ID, we use the ID of the most recent metadata deployment.","required":false,"input":[],"multiple":false,"type":"option"},"verbose":{"description":"verbose output of deploy results","longDescription":"Indicates that you want verbose output for deploy results.","type":"boolean","kind":"boolean","allowNo":false}}},"force:mdapi:legacy:retrieve:report":{"id":"force:mdapi:legacy:retrieve:report","description":"(deprecated) check the status of a metadata retrieval\n\nWARNING: The command \"force:mdapi:legacy:retrieve:report\" has been deprecated and will be removed in v56.0 or later. Use \"force:mdapi:retrieve:report\" instead.\n\nSpecify the job ID and a target directory for the retrieve you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status. If the retrieve was successful, the resulting zip file will be saved to the location passed in with the retrieve target parameter.","strict":true,"usage":"<%= command.id %> [-w <minutes>] [-r <directory>] [-i <id>] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes (default: -1 (no limit))","required":false,"multiple":false},"retrievetargetdir":{"name":"retrievetargetdir","type":"option","char":"r","description":"directory root for the retrieved files","required":false,"multiple":false},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of retrieve result","allowNo":false},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the retrieve you want to check; defaults to your most recent CLI retrieval if not specified","required":false,"multiple":false}},"args":[],"deprecated":{"version":55,"to":"force:mdapi:retrieve:report"},"theDescription":"check the status of a metadata retrieval","longDescription":"Check the status of an asynchronous metadata retrieval.","help":"Specify the job ID and a target directory for the retrieve you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status. If the retrieve was successful, the resulting zip file will be saved to the location passed in with the retrieve target parameter.","requiresProject":false,"requiresUsername":true,"flagsConfig":{"wait":{"kind":"minutes","char":"w","description":"wait time for command to finish in minutes (default: -1 (no limit))","longDescription":"The number of minutes to wait for the command to complete. -1","required":false,"input":[],"multiple":false,"type":"option"},"retrievetargetdir":{"kind":"directory","char":"r","description":"directory root for the retrieved files","longDescription":"The root of the directory structure where the retrieved .zip or metadata files are put.","required":false,"input":[],"multiple":false,"type":"option"},"verbose":{"description":"verbose output of retrieve result","longDescription":"Indicates that you want verbose output from the retrieve operation.","type":"boolean","kind":"boolean","allowNo":false},"jobid":{"kind":"id","char":"i","description":"job ID of the retrieve you want to check; defaults to your most recent CLI retrieval if not specified","longDescription":"The job ID (asyncId) of the retrieve you want to check. If not specified, the default value is the ID of the most recent metadata retrieval you ran using Salesforce CLI. You must specify a --retrievetargetdir. Use with --wait to resume waiting.","required":false,"input":[],"multiple":false,"type":"option"}}},"force:package:version:create:list":{"id":"force:package:version:create:list","description":"list package version creation requests\n\nShows the details of each request to create a package version in the Dev Hub org.\n\nAll filter parameters are applied using the AND logical operator (not OR).\n\nTo get information about a specific request, run \"sfdx force:package:version:create:report\" and supply the request ID.\n\nExamples:\n   $ sfdx force:package:version:create:list\n   $ sfdx force:package:version:create:list --createdlastdays 3\n   $ sfdx force:package:version:create:list --status Error\n   $ sfdx force:package:version:create:list -s InProgress\n   $ sfdx force:package:version:create:list -c 3 -s Success","strict":true,"usage":"<%= command.id %> [-c <number>] [-s Queued|InProgress|Success|Error] [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"createdlastdays":{"name":"createdlastdays","type":"option","char":"c","description":"created in the last specified number of days (starting at 00:00:00 of first day to now; 0 for today)","required":false,"multiple":false},"status":{"name":"status","type":"option","char":"s","description":"filter the list by version creation request status","required":false,"helpValue":"(Queued|InProgress|Success|Error)","multiple":false,"options":["Queued","InProgress","Success","Error"]}},"args":[],"theDescription":"list package version creation requests","longDescription":"Lists all requests to create second-generation package versions in the Dev Hub org.","help":"Shows the details of each request to create a package version in the Dev Hub org.\n\nAll filter parameters are applied using the AND logical operator (not OR).\n\nTo get information about a specific request, run \"sfdx force:package:version:create:report\" and supply the request ID.\n\nExamples:\n   $ sfdx force:package:version:create:list\n   $ sfdx force:package:version:create:list --createdlastdays 3\n   $ sfdx force:package:version:create:list --status Error\n   $ sfdx force:package:version:create:list -s InProgress\n   $ sfdx force:package:version:create:list -c 3 -s Success","requiresProject":false,"orgType":"defaultdevhubusername","requiresDevhubUsername":true,"flagsConfig":{"createdlastdays":{"kind":"number","char":"c","description":"created in the last specified number of days (starting at 00:00:00 of first day to now; 0 for today)","longDescription":"Filters the list based on the specified maximum number of days since the request was created (starting at 00:00:00 of first day to now; 0 for today).","required":false,"input":[],"multiple":false,"type":"option"},"status":{"kind":"enum","helpValue":"(Queued|InProgress|Success|Error)","char":"s","description":"filter the list by version creation request status","longDescription":"Filters the list based on the status of version creation requests.","required":false,"options":["Queued","InProgress","Success","Error"],"input":[],"multiple":false,"type":"option"}}},"force:package:version:create:report":{"id":"force:package:version:create:report","description":"retrieve details about a package version creation request\n\nSpecify the request ID for which you want to view details. If applicable, the command displays errors related to the request.\n\nExamples:\n   $ sfdx force:package:version:create:report -i 08c...\n   $ sfdx force:package:version:create:report -i 08c... -v devhub@example.com\n\nTo show all requests in the org, run \"sfdx force:package:version:create:list\".","strict":true,"usage":"<%= command.id %> -i <id> [-v <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetdevhubusername":{"name":"targetdevhubusername","type":"option","char":"v","description":"username or alias for the dev hub org; overrides default dev hub org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"packagecreaterequestid":{"name":"packagecreaterequestid","type":"option","char":"i","description":"package version creation request ID (starts with 08c)","required":true,"multiple":false}},"args":[],"theDescription":"retrieve details about a package version creation request","longDescription":"Retrieves details about a package version creation request in the Dev Hub org.","help":"Specify the request ID for which you want to view details. If applicable, the command displays errors related to the request.\n\nExamples:\n   $ sfdx force:package:version:create:report -i 08c...\n   $ sfdx force:package:version:create:report -i 08c... -v devhub@example.com\n\nTo show all requests in the org, run \"sfdx force:package:version:create:list\".","requiresProject":false,"orgType":"defaultdevhubusername","requiresDevhubUsername":true,"flagsConfig":{"packagecreaterequestid":{"kind":"id","char":"i","description":"package version creation request ID (starts with 08c)","longDescription":"The ID (starts with 08c) of the package version creation request you want to display.","required":true,"input":[],"multiple":false,"type":"option"}}},"force:package1:version:create:get":{"id":"force:package1:version:create:get","description":"retrieve the status of a package version creation request\n\nExamples:\n   $ sfdx force:package:version:create:report -i 08c...\n   $ sfdx force:package:version:create:report -i 08c... -v devhub@example.com","strict":true,"usage":"<%= command.id %> -i <id> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"requestid":{"name":"requestid","type":"option","char":"i","description":"PackageUploadRequest ID","required":true,"multiple":false}},"args":[],"theDescription":"retrieve the status of a package version creation request","longDescription":"Retrieves the status of a package version creation request.","help":"Examples:\n   $ sfdx force:package:version:create:report -i 08c...\n   $ sfdx force:package:version:create:report -i 08c... -v devhub@example.com","requiresProject":false,"requiresUsername":true,"flagsConfig":{"requestid":{"kind":"id","char":"i","description":"PackageUploadRequest ID","longDescription":"The ID of the PackageUploadRequest.","required":true,"input":[],"multiple":false,"type":"option"}}},"force:source:legacy:tracking:clear":{"id":"force:source:legacy:tracking:clear","description":"clear all local source tracking information\n\nWARNING: This command deletes or overwrites all existing source tracking files. Use with extreme caution.\n\nClears all local source tracking information. When you next run force:source:legacy:status, the CLI displays all local and remote files as changed, and any files with the same name are listed as conflicts.","strict":true,"usage":"<%= command.id %> [-p] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"noprompt":{"name":"noprompt","type":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","required":false,"allowNo":false}},"args":[],"deprecated":{"version":55,"to":"force:source:tracking:clear"},"requiresProject":true,"requiresUsername":true,"flagsConfig":{"noprompt":{"kind":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","required":false,"allowNo":false,"type":"boolean"}}},"force:source:legacy:tracking:reset":{"id":"force:source:legacy:tracking:reset","description":"reset local and remote source tracking\n\nWARNING: This command deletes or overwrites all existing source tracking files. Use with extreme caution.\n\nResets local and remote source tracking so that the CLI no longer registers differences between your local files and those in the org. When you next run force:source:legacy:status, the CLI returns no results, even though conflicts might actually exist. The CLI then resumes tracking new source changes as usual.\n\nUse the --revision parameter to reset source tracking to a specific revision number of an org source member. To get the revision number, query the SourceMember Tooling API object with the force:data:soql:query command. For example:\n  $ sfdx force:data:soql:query -q \"SELECT MemberName, MemberType, RevisionCounter FROM SourceMember\" -t","strict":true,"usage":"<%= command.id %> [-r <integer>] [-p] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"salesforce-alm","pluginAlias":"salesforce-alm","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","multiple":false,"options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org","multiple":false},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command","multiple":false},"revision":{"name":"revision","type":"option","char":"r","description":"reset to a specific SourceMember revision counter number","required":false,"multiple":false},"noprompt":{"name":"noprompt","type":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","required":false,"allowNo":false}},"args":[],"deprecated":{"version":55,"to":"force:source:tracking:reset"},"requiresProject":true,"requiresUsername":true,"flagsConfig":{"revision":{"kind":"integer","char":"r","description":"reset to a specific SourceMember revision counter number","required":false,"min":0,"input":[],"multiple":false,"type":"option"},"noprompt":{"kind":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","required":false,"allowNo":false,"type":"boolean"}}}}}