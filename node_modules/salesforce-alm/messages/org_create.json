{
  "commandSuccess": "Successfully created scratch org: %s, username: %s",
  "commandSandboxSuccess": "The sandbox org creation process %s is in progress. Run \"sfdx force:org:status -n %s\" to check for status. If the org is ready, checking the status also authorizes the org for use with Salesforce CLI.",
  "commandDescription": "create a scratch or sandbox org",
  "commandLongDescription": "Creates a scratch org or a sandbox org using the values specified in a configuration file or key=value pairs that you specify on the command line. Values specified on the command line override values in the configuration file.",
  "commandHelp": "Specify a configuration file or provide key=value pairs while creating a scratch org or a sandbox. When creating scratch orgs, —targetdevhubusername (-v) must be a Dev Hub org. When creating sandboxes, the --targetusername (-u) must be a production org with sandbox licenses. The —type (-t) is required if creating a sandbox.\n\nExamples:\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a MyScratchOrg\n   $ sfdx force:org:create edition=Developer -a MyScratchOrg -s -v devHub\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a ScratchOrgWithOverrides username=testuser1@mycompany.org\n   $ sfdx force:org:create -t sandbox -f config/dev-sandbox-def.json -a MyDevSandbox -u prodOrg",
  "cliForceCreateNoConfig": "Please specify an org configuration via file and/or key=value pairs",
  "clientidFlagDescription": "connected app consumer key; not supported for sandbox org creation",
  "clientidFlagLongDescription": "A connected app consumer key, as configured in your Dev Hub or production org. This parameter is not supported for sandbox org creation.",
  "commandClientIdNotSupported": "-i | --clientid is not supported for the sandbox org create command. Its value, %s, has been ignored.",
  "setdefaultusernameFlagDescription": "set the created org as the default username",
  "setdefaultusernameFlagLongDescription": "Sets the created org as the default username.",
  "setaliasFlagDescription": "alias for the created org",
  "setaliasFlagLongDescription": "An alias for the created org.",
  "definitionfileFlagDescription": "path to an org definition file",
  "definitionfileFlagLongDescription": "The path to an org definition file. Either --definitionfile or a vararg value for edition (for example, edition=Developer) is required. Varargs override the values in the scratch org definition file.",
  "definitionjsonFlagDescription": "org definition in JSON format",
  "definitionjsonFlagLongDescription": "Org definition in JSON format. Either --definitionfile or --definitionjson is required.",
  "nonamespaceFlagDescription": "create the scratch org with no namespace",
  "nonamespaceFlagLongDescription": "Creates the scratch org with no namespace. Scratch orgs without a namespace are useful when testing installations of packages with namespaces.",
  "noancestorsFlagDescription": "do not include second-generation package ancestors in the scratch org",
  "noancestorsFlagLongDescription": "Prevents the inclusion of second-generation package ancestors in the scratch org.",
  "envFlagDescription": "environment where the scratch org is created: %s",
  "envFlagLongDescription": "Environment where the scratch org is created: %s.",
  "commandUnauthorized": "You don't have access to the %s object",
  "orgTimeoutHintNoIdAction": "Increase the wait timeout value and run the org creation command again.",
  "typeFlagDescription": "type of org to create",
  "typeFlagLongDescription": "The type of org to create.",
  "durationdaysFlagDescription": "duration of the scratch org (in days) (default:7, min:1, max:30)",
  "durationdaysFlagLongDescription": "Sets the duration of the scratch org, in days. Valid values are from 1-30. The default is 7 days.",
  "errorInvalidAncestorVersionFormat": "The ancestor versionNumber must be in the format major.minor.patch but the value found is %s",
  "errorAncestorIdVersionMismatch": "The ancestorVersion in sfdx-project.json is not the version expected for the ancestorId you supplied. ancestorVersion %s. ancestorID %s.",
  "errorpackage2AncestorIdsKeyNotSupported": "The package2AncestorIds key is no longer supported in a scratch org definition. Ancestors defined in sfdx-project.json will be included in the scratch org.",
  "errorNoMatchingAncestor": "The ancestorId for ancestorVersion %s can't be found. Package ID %s.",
  "errorNoMatchingAncestorId": "The ancestor for ancestorId [%s] can't be found. Package ID [%s].",
  "errorAncestorNotReleased": "The ancestor package version [%s] specified in the sfdx-project.json file may exist hasn’t been promoted and released. Release the ancestor package version before specifying it as the ancestor in a new package or patch version.",
  "retryFlagDescription": "Number of scratch org auth retries after scratch org is successfully signed up.",
  "jwtAuthRetryTimedOut": "Authorization for scratch org %s timed out after %d milliseconds with %d retries.",
  "RequiresDevhubUsernameError": "This command requires a dev hub org username set either with a flag or by default in the config.",
  "RetryIsNotValidForSandboxes": "One cannot use flag retry with Sandbox org create.",
  "RequiresUsernameError": "This command requires a production org username set either with a flag or by default in the config."
}
